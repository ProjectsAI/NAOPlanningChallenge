import sys
import time
from naoqi import ALProxy


def main(robotIP, port):
	names = list()
	times = list()
	keys = list()
	
	

	try:
		ttsProxy = ALProxy("ALTextToSpeech",robotIP,port)
	except Exception,e:
		print("Could not create a proxy to ALTextToSpeech")
	
	ttsProxy.say("Hey check out my guitar skills!")

		
	names.append("LAnklePitch")
	times.append([0.433333, 4])
	keys.append([[-0.359129, [3, -0.144444, 0], [3, 1.18889, 0]], [-0.104485, [3, -1.18889, 0], [3, 0, 0]]])
	

	names.append("LAnkleRoll")
	times.append([0.433333, 4])
	keys.append([[-0.0766796, [3, -0.144444, 0], [3, 1.18889, 0]], [0.00114113, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[-1.06916, [3, -0.0555556, 0], [3, 0.144444, 0]], [-1.05688, [3, -0.144444, 0], [3, 0.0777778, 0]], [-1.05688, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-1.04461, [3, -0.0777778, 0], [3, 0.1, 0]], [-1.04461, [3, -0.1, 0], [3, 0.111111, 0]], [-1.04461, [3, -0.111111, 0], [3, 0.0666667, 0]], [-1.04461, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-1.04461, [3, -0.0222222, 0], [3, 0.111111, 0]], [-1.04461, [3, -0.111111, 0], [3, 0.0888889, 0]], [-1.04461, [3, -0.0888889, 0], [3, 0.0777778, 0]], [-1.04461, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-1.04461, [3, -0.0888889, 0], [3, 0.111111, 0]], [-1.04461, [3, -0.111111, 0], [3, 0.2, 0]], [-0.319319, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[-1.76722, [3, -0.0555556, 0], [3, 0.144444, 0]], [-1.75341, [3, -0.144444, 0], [3, 0.0777778, 0]], [-1.75495, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-1.75034, [3, -0.0777778, 0], [3, 0.1, 0]], [-1.75034, [3, -0.1, 0], [3, 0.111111, 0]], [-1.75034, [3, -0.111111, 0], [3, 0.0666667, 0]], [-1.75034, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-1.75034, [3, -0.0222222, 0], [3, 0.111111, 0]], [-1.75034, [3, -0.111111, 0], [3, 0.0888889, 0]], [-1.75034, [3, -0.0888889, 0], [3, 0.0777778, 0]], [-1.75034, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-1.75034, [3, -0.0888889, 0], [3, 0.111111, 0]], [-1.75034, [3, -0.111111, 0], [3, 0.2, 0]], [-0.772985, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.166667, 4])
	keys.append([[0.922933, [3, -0.0555556, 0], [3, 1.27778, 0]], [0.91041, [3, -1.27778, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.433333, 4])
	keys.append([[-0.291681, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0531118, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.433333, 4])
	keys.append([[0.144004, [3, -0.144444, 0], [3, 1.18889, 0]], [-0.0308314, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.433333, 4])
	keys.append([[-0.547681, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0174721, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.433333, 4])
	keys.append([[0.999849, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0782677, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[0.720938, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.733209, [3, -0.144444, -0.00498558], [3, 0.0777778, 0.00268454]], [0.743948, [3, -0.0777778, -0.00460214], [3, 0.0777778, 0.00460214]], [0.760822, [3, -0.0777778, 0], [3, 0.1, 0]], [0.760822, [3, -0.1, 0], [3, 0.111111, 0]], [0.760822, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.760822, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.760822, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.760822, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.760822, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.760822, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.760822, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.760822, [3, -0.111111, 0], [3, 0.2, 0]], [1.55604, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[0.535324, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.516916, [3, -0.144444, 0], [3, 0.0777778, 0]], [0.516916, [3, -0.0777778, 0], [3, 0.0777778, 0]], [0.501576, [3, -0.0777778, 0], [3, 0.1, 0]], [0.50311, [3, -0.1, 0], [3, 0.111111, 0]], [0.50311, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.50311, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.50311, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.50311, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.50311, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.50311, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.50311, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.50311, [3, -0.111111, 0], [3, 0.2, 0]], [0.363876, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.166667, 4])
	keys.append([[-1.01402, [3, -0.0555556, 0], [3, 1.27778, 0]], [-1.02242, [3, -1.27778, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.433333, 4])
	keys.append([[0.0383229, [3, -0.144444, 0], [3, 1.18889, 0]], [-0.0951351, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.433333, 4])
	keys.append([[0.296102, [3, -0.144444, 0], [3, 1.18889, 0]], [0.00451718, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[1.02629, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.523136, [3, -0.144444, 0], [3, 0.0777778, 0]], [1.22264, [3, -0.0777778, 0], [3, 0.0777778, 0]], [0.681137, [3, -0.0777778, 0], [3, 0.1, 0]], [1.11066, [3, -0.1, 0], [3, 0.111111, 0]], [0.656595, [3, -0.111111, 0], [3, 0.0666667, 0]], [1.11066, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.656595, [3, -0.0222222, 0], [3, 0.111111, 0]], [1.11066, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.656595, [3, -0.0888889, 0], [3, 0.0777778, 0]], [1.11066, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.656595, [3, -0.0888889, 0], [3, 0.111111, 0]], [1.11066, [3, -0.111111, 0], [3, 0.2, 0]], [0.283869, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[0.276078, [3, -0.0555556, 0], [3, 0.144444, 0]], [-0.029188, [3, -0.144444, 0], [3, 0.0777778, 0]], [0.408002, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-0.138102, [3, -0.0777778, 0], [3, 0.1, 0]], [0.391128, [3, -0.1, 0], [3, 0.111111, 0]], [-0.0982179, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.391128, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-0.0982179, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.391128, [3, -0.111111, 0], [3, 0.0888889, 0]], [-0.0982179, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.391128, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-0.0982179, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.391128, [3, -0.111111, -0.105996], [3, 0.2, 0.190794]], [0.792152, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.166667, 0.6, 4])
	keys.append([[0.920751, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.452752, [3, -0.144444, 0], [3, 1.13333, 0]], [0.909692, [3, -1.13333, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.433333, 4])
	keys.append([[-0.125845, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0305574, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.433333, 4])
	keys.append([[-0.309848, [3, -0.144444, 0], [3, 1.18889, 0]], [0.00267122, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.433333, 4])
	keys.append([[0.470523, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0918047, [3, -1.18889, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[0.889762, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.868286, [3, -0.144444, 0], [3, 0.0777778, 0]], [0.92351, [3, -0.0777778, -0.0112495], [3, 0.0777778, 0.0112495]], [0.935783, [3, -0.0777778, 0], [3, 0.1, 0]], [0.89283, [3, -0.1, 0.00552293], [3, 0.111111, -0.00613659]], [0.886694, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.89283, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.886694, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.89283, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.886694, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.89283, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.886694, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.89283, [3, -0.111111, -0.00613659], [3, 0.2, 0.0110459]], [1.55681, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
	keys.append([[-0.181053, [3, -0.0555556, 0], [3, 0.144444, 0]], [-0.101286, [3, -0.144444, -0.0222685], [3, 0.0777778, 0.0119907]], [-0.0782759, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-0.16418, [3, -0.0777778, 0], [3, 0.1, 0]], [-0.075208, [3, -0.1, 0], [3, 0.111111, 0]], [-0.104354, [3, -0.111111, 0], [3, 0.0666667, 0]], [-0.075208, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-0.104354, [3, -0.0222222, 0], [3, 0.111111, 0]], [-0.075208, [3, -0.111111, 0], [3, 0.0888889, 0]], [-0.104354, [3, -0.0888889, 0], [3, 0.0777778, 0]], [-0.075208, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-0.104354, [3, -0.0888889, 0], [3, 0.111111, 0]], [-0.075208, [3, -0.111111, 0], [3, 0.2, 0]], [-0.356235, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.166667, 0.6, 4])
	keys.append([[0.96331, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.682588, [3, -0.144444, 0], [3, 1.13333, 0]], [0.964264, [3, -1.13333, 0], [3, 0, 0]]])

	try:
		motion = ALProxy("ALMotion",robotIP,port)
		motion.angleInterpolationBezier(names, times, keys)
	except BaseException, err:
		print err
	  
  
if __name__ == "__main__":

    robotIP = "127.0.0.1"#"192.168.11.3"

    port = 55650 #9559 # Insert NAO port


    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    main(robotIP, port)
