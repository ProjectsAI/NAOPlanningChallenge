import sys
import time
from naoqi import ALProxy


def main(robotIP, port):
	names = list()
	times = list()
	keys = list()
	
	try:
		ttsProxy = ALProxy("ALTextToSpeech",robotIP,port)
	except Exception,e:
		print("Could not create a proxy to ALTextToSpeech")
		
	#ttsProxy.say("...")

	names.append("HeadPitch")
	times.append([0.833333, 1.16667, 1.5, 1.83333, 2.16667, 2.83333, 3.16667, 3.5, 3.83333, 4.16667, 4.5, 5.16667, 5.5])
	keys.append([[-0.00730551, [3, -0.277778, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.00730551, [3, -0.222222, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.00730551, [3, -0.222222, 0], [3, 0.111111, 0]], [-0.00730551, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.833333, 1.16667, 1.5, 1.83333, 2.16667, 2.83333, 3.16667, 3.5, 3.83333, 4.16667, 4.5, 5.16667, 5.5])
	keys.append([[0, [3, -0.277778, 0], [3, 0.111111, 0]], [-0.441568, [3, -0.111111, 0.104138], [3, 0.111111, -0.104138]], [-0.624828, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.403339, [3, -0.111111, -0.104138], [3, 0.111111, 0.104138]], [0, [3, -0.111111, -0.114241], [3, 0.222222, 0.228481]], [0.624828, [3, -0.222222, 0], [3, 0.111111, 0]], [0, [3, -0.111111, 0.177733], [3, 0.111111, -0.177733]], [-0.441568, [3, -0.111111, 0.104138], [3, 0.111111, -0.104138]], [-0.624828, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.403339, [3, -0.111111, -0.104138], [3, 0.111111, 0.104138]], [0, [3, -0.111111, -0.114241], [3, 0.222222, 0.228481]], [0.624828, [3, -0.222222, 0], [3, 0.111111, 0]], [0.00643452, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([5.5])
	keys.append([[-0.340758, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([5.5])
	keys.append([[-0.00211309, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[-1.12892, [3, -0.277778, 0], [3, 0.111111, 0]], [-1.12944, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.10481, [3, -0.111111, 0], [3, 0.222222, 0]], [-1.4848, [3, -0.222222, 0], [3, 0.111111, 0]], [-1.39704, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.39704, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.12892, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.12944, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.10481, [3, -0.111111, 0], [3, 0.222222, 0]], [-1.4848, [3, -0.222222, 0], [3, 0.111111, 0]], [-1.39704, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.39704, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.01329, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[-0.0381204, [3, -0.277778, 0], [3, 0.111111, 0]], [-0.0482739, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.000871307, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.464231, [3, -0.222222, 0.00273673], [3, 0.111111, -0.00136837]], [-0.4656, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.4656, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.0381204, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.0482739, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.000871307, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.464231, [3, -0.222222, 0.00273673], [3, 0.111111, -0.00136837]], [-0.4656, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.4656, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.38861, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[0.29, [3, -0.277778, 0], [3, 0.111111, 0]], [0.29, [3, -0.111111, 0], [3, 0.111111, 0]], [0.314233, [3, -0.111111, -0.024233], [3, 0.222222, 0.048466]], [0.740441, [3, -0.222222, -0.112393], [3, 0.111111, 0.0561963]], [0.82, [3, -0.111111, 0], [3, 0.111111, 0]], [0.82, [3, -0.111111, 0], [3, 0.111111, 0]], [0.29, [3, -0.111111, 0], [3, 0.111111, 0]], [0.29, [3, -0.111111, 0], [3, 0.111111, 0]], [0.314233, [3, -0.111111, -0.024233], [3, 0.222222, 0.048466]], [0.740441, [3, -0.222222, -0.112393], [3, 0.111111, 0.0561963]], [0.82, [3, -0.111111, 0], [3, 0.111111, 0]], [0.82, [3, -0.111111, 0], [3, 0.111111, 0]], [0.259986, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([5.5])
	keys.append([[-0.45, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([5.5])
	keys.append([[0.00848469, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([5.5])
	keys.append([[-0.00730551, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([5.5])
	keys.append([[0.709886, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[0.896904, [3, -0.277778, 0], [3, 0.111111, 0]], [0.901058, [3, -0.111111, 0], [3, 0.111111, 0]], [0.841751, [3, -0.111111, 0.0593063], [3, 0.222222, -0.118613]], [-0.0317612, [3, -0.222222, 0], [3, 0.111111, 0]], [0.0200533, [3, -0.111111, 0], [3, 0.111111, 0]], [0.0200533, [3, -0.111111, 0], [3, 0.111111, 0]], [0.896904, [3, -0.111111, -0.00415387], [3, 0.111111, 0.00415387]], [0.901058, [3, -0.111111, 0], [3, 0.111111, 0]], [0.841751, [3, -0.111111, 0.0593063], [3, 0.222222, -0.118613]], [-0.0317612, [3, -0.222222, 0], [3, 0.111111, 0]], [0.0200533, [3, -0.111111, 0], [3, 0.111111, 0]], [0.0200533, [3, -0.111111, 0], [3, 0.111111, 0]], [1.39796, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[0.323134, [3, -0.277778, 0], [3, 0.111111, 0]], [0.322036, [3, -0.111111, 0], [3, 0.111111, 0]], [0.331618, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.243711, [3, -0.222222, 0], [3, 0.111111, 0]], [0.172022, [3, -0.111111, -0.162022], [3, 0.111111, 0.162022]], [0.728418, [3, -0.111111, 0], [3, 0.111111, 0]], [0.323134, [3, -0.111111, 0.00109782], [3, 0.111111, -0.00109782]], [0.322036, [3, -0.111111, 0], [3, 0.111111, 0]], [0.331618, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.243711, [3, -0.222222, 0], [3, 0.111111, 0]], [0.172022, [3, -0.111111, -0.162022], [3, 0.111111, 0.162022]], [0.728418, [3, -0.111111, 0], [3, 0.111111, 0]], [0.300643, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[-0.28573, [3, -0.277778, 0], [3, 0.111111, 0]], [-0.277897, [3, -0.111111, -0.00783302], [3, 0.111111, 0.00783302]], [0.305228, [3, -0.111111, -0.15925], [3, 0.222222, 0.3185]], [1.15535, [3, -0.222222, 0], [3, 0.111111, 0]], [1.15175, [3, -0.111111, 0], [3, 0.111111, 0]], [1.15175, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.28573, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.277897, [3, -0.111111, -0.00783302], [3, 0.111111, 0.00783302]], [0.305228, [3, -0.111111, -0.15925], [3, 0.222222, 0.3185]], [1.15535, [3, -0.222222, 0], [3, 0.111111, 0]], [1.15175, [3, -0.111111, 0], [3, 0.111111, 0]], [1.15175, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.00264126, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([5.5])
	keys.append([[-0.342235, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([5.5])
	keys.append([[-0.00532818, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.833333, 1.16667, 1.5, 1.83333, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.16667, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[1.46317, [3, -0.277778, 0], [3, 0.111111, 0]], [1.48296, [3, -0.111111, 0], [3, 0.111111, 0]], [1.39704, [3, -0.111111, 0.0859244], [3, 0.111111, -0.0859244]], [0.666716, [3, -0.111111, 0], [3, 0.111111, 0]], [1.11667, [3, -0.111111, 0], [3, 0.111111, 0]], [1.10481, [3, -0.111111, 0], [3, 0.111111, 0]], [1.10481, [3, -0.111111, 0], [3, 0.111111, 0]], [1.46317, [3, -0.111111, -0.0197868], [3, 0.111111, 0.0197868]], [1.48296, [3, -0.111111, 0], [3, 0.111111, 0]], [1.39704, [3, -0.111111, 0.0859244], [3, 0.111111, -0.0859244]], [0.666716, [3, -0.111111, 0], [3, 0.111111, 0]], [1.11667, [3, -0.111111, 0], [3, 0.111111, 0]], [1.10481, [3, -0.111111, 0], [3, 0.111111, 0]], [1.10481, [3, -0.111111, 0], [3, 0.111111, 0]], [1.01181, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[0.47155, [3, -0.277778, 0], [3, 0.111111, 0]], [0.470375, [3, -0.111111, 0.000991634], [3, 0.111111, -0.000991634]], [0.4656, [3, -0.111111, 0.00477521], [3, 0.222222, -0.00955043]], [-0.00480866, [3, -0.222222, 0], [3, 0.111111, 0]], [0.000871307, [3, -0.111111, 0], [3, 0.111111, 0]], [0.000871307, [3, -0.111111, 0], [3, 0.111111, 0]], [0.47155, [3, -0.111111, 0], [3, 0.111111, 0]], [0.470375, [3, -0.111111, 0.000991634], [3, 0.111111, -0.000991634]], [0.4656, [3, -0.111111, 0.00477521], [3, 0.222222, -0.00955043]], [-0.00480866, [3, -0.222222, 0], [3, 0.111111, 0]], [0.000871307, [3, -0.111111, 0], [3, 0.111111, 0]], [0.000871307, [3, -0.111111, 0], [3, 0.111111, 0]], [1.38165, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[0.751334, [3, -0.277778, 0], [3, 0.111111, 0]], [0.753008, [3, -0.111111, -0.001674], [3, 0.111111, 0.001674]], [0.82, [3, -0.111111, 0], [3, 0.222222, 0]], [0.308975, [3, -0.222222, 0], [3, 0.111111, 0]], [0.314233, [3, -0.111111, 0], [3, 0.111111, 0]], [0.314233, [3, -0.111111, 0], [3, 0.111111, 0]], [0.751334, [3, -0.111111, -0.001674], [3, 0.111111, 0.001674]], [0.753008, [3, -0.111111, -0.001674], [3, 0.111111, 0.001674]], [0.82, [3, -0.111111, 0], [3, 0.222222, 0]], [0.308975, [3, -0.222222, 0], [3, 0.111111, 0]], [0.314233, [3, -0.111111, 0], [3, 0.111111, 0]], [0.314233, [3, -0.111111, 0], [3, 0.111111, 0]], [0.256119, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([5.5])
	keys.append([[-0.45526, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([5.5])
	keys.append([[-0.00467092, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([5.5])
	keys.append([[-0.00847434, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([5.5])
	keys.append([[0.708487, [3, -1.83333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.833333, 1.16667, 1.5, 1.83333, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.16667, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[-0.0943158, [3, -0.277778, 0], [3, 0.111111, 0]], [-0.01006, [3, -0.111111, -0.0190615], [3, 0.111111, 0.0190615]], [0.0200533, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.10472, [3, -0.111111, 0], [3, 0.111111, 0]], [0.850918, [3, -0.111111, 0], [3, 0.111111, 0]], [0.841751, [3, -0.111111, 0], [3, 0.111111, 0]], [0.841751, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.0943158, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.01006, [3, -0.111111, -0.0190615], [3, 0.111111, 0.0190615]], [0.0200533, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.10472, [3, -0.111111, 0], [3, 0.111111, 0]], [0.850918, [3, -0.111111, 0], [3, 0.111111, 0]], [0.841751, [3, -0.111111, 0], [3, 0.111111, 0]], [0.841751, [3, -0.111111, 0], [3, 0.111111, 0]], [1.3964, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.833333, 1.16667, 1.5, 1.83333, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.16667, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[0.246735, [3, -0.277778, 0], [3, 0.111111, 0]], [-0.0620962, [3, -0.111111, 0.162526], [3, 0.111111, -0.162526]], [-0.728418, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.267035, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.336307, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.331618, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.331618, [3, -0.111111, 0], [3, 0.111111, 0]], [0.246735, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.0620962, [3, -0.111111, 0.162526], [3, 0.111111, -0.162526]], [-0.728418, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.267035, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.336307, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.331618, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.331618, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.294826, [3, -0.111111, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.833333, 1.16667, 1.5, 2.16667, 2.5, 2.83333, 3.16667, 3.5, 3.83333, 4.5, 4.83333, 5.16667, 5.5])
	keys.append([[-1.17584, [3, -0.277778, 0], [3, 0.111111, 0]], [-1.17422, [3, -0.111111, -0.00161095], [3, 0.111111, 0.00161095]], [-1.15175, [3, -0.111111, -0.0224728], [3, 0.222222, 0.0449456]], [-0.302801, [3, -0.222222, 0], [3, 0.111111, 0]], [-0.305228, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.305228, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.17584, [3, -0.111111, 0], [3, 0.111111, 0]], [-1.17422, [3, -0.111111, -0.00161095], [3, 0.111111, 0.00161095]], [-1.15175, [3, -0.111111, -0.0224728], [3, 0.222222, 0.0449456]], [-0.302801, [3, -0.222222, 0], [3, 0.111111, 0]], [-0.305228, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.305228, [3, -0.111111, 0], [3, 0.111111, 0]], [-0.000403613, [3, -0.111111, 0], [3, 0, 0]]])

	try:
	  motion = ALProxy("ALMotion",robotIP,port)
	  motion.angleInterpolationBezier(names, times, keys)
	except BaseException, err:
	  print err
  
if __name__ == "__main__":

    robotIP = "127.0.0.1"#"192.168.11.3"

    port = 55650 #9559 # Insert NAO port


    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    main(robotIP, port)
