import sys
import time

from naoqi import ALProxy


def main(robotIP, port):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.225, 3.05, 3.325, 4])
	keys.append([[-0.233874, [3, -0.075, 0], [3, 0.941667, 0]], [-0.173384, [3, -0.941667, 0], [3, 0.0916667, 0]], [-0.173384, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00540675, [3, -0.225, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.225, 3.05, 3.325, 4])
	keys.append([[-0.912807, [3, -0.075, 0], [3, 0.941667, 0]], [-0.21932, [3, -0.941667, 0], [3, 0.0916667, 0]], [-0.21932, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00306787, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.0199001, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.263807, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.263807, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.344001, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.116626, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.0828778, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.0828778, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00211981, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
	keys.append([[-1.54462, [3, -0.0666667, 0], [3, 0.108333, 0]], [-1.53864, [3, -0.108333, 0], [3, 0.0916667, 0]], [-1.54462, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-1.53864, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-1.54462, [3, -0.0916667, 0], [3, 0.075, 0]], [-1.53864, [3, -0.075, 0], [3, 0.0833333, 0]], [-1.54462, [3, -0.0833333, 0], [3, 0.1, 0]], [-1.53864, [3, -0.1, 0], [3, 0.0666667, 0]], [-1.54462, [3, -0.0666667, 0], [3, 0.0833333, 0]], [-1.53864, [3, -0.0833333, 0], [3, 0.075, 0]], [-1.54462, [3, -0.075, 0], [3, 0.0916667, 0]], [-1.53558, [3, -0.0916667, 0], [3, 0.0916667, 0]], [-1.53558, [3, -0.0916667, 0], [3, 0.225, 0]], [-1.00618, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
	keys.append([[-0.966378, [3, -0.0666667, 0], [3, 0.108333, 0]], [-1.38823, [3, -0.108333, 0], [3, 0.0916667, 0]], [-0.966378, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-1.38823, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-0.966378, [3, -0.0916667, 0], [3, 0.075, 0]], [-1.38823, [3, -0.075, 0], [3, 0.0833333, 0]], [-0.966378, [3, -0.0833333, 0], [3, 0.1, 0]], [-1.38823, [3, -0.1, 0], [3, 0.0666667, 0]], [-0.966378, [3, -0.0666667, 0], [3, 0.0833333, 0]], [-1.38823, [3, -0.0833333, 0], [3, 0.075, 0]], [-0.966378, [3, -0.075, 0], [3, 0.0916667, 0]], [-1.36982, [3, -0.0916667, 0], [3, 0.0916667, 0]], [-1.36982, [3, -0.0916667, 0], [3, 0.225, 0]], [-1.3896, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
	keys.append([[0.7708, [3, -0.0666667, 0], [3, 0.108333, 0]], [0.7696, [3, -0.108333, 0], [3, 0.0916667, 0]], [0.7708, [3, -0.0916667, 0], [3, 0.0833333, 0]], [0.7696, [3, -0.0833333, 0], [3, 0.0916667, 0]], [0.7708, [3, -0.0916667, 0], [3, 0.075, 0]], [0.7696, [3, -0.075, 0], [3, 0.0833333, 0]], [0.7708, [3, -0.0833333, 0], [3, 0.1, 0]], [0.7696, [3, -0.1, 0], [3, 0.0666667, 0]], [0.7708, [3, -0.0666667, 0], [3, 0.0833333, 0]], [0.7696, [3, -0.0833333, 0], [3, 0.075, 0]], [0.7708, [3, -0.075, 0], [3, 0.0916667, 0]], [0.7692, [3, -0.0916667, 0], [3, 0.0916667, 0]], [0.7692, [3, -0.0916667, 0], [3, 0.225, 0]], [0.256818, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[0.138018, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.251617, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.251617, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.45, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[0.0383082, [3, -0.0416667, 0], [3, 0.975, 0]], [0.0291041, [3, -0.975, 0], [3, 0.0916667, 0]], [0.0291041, [3, -0.0916667, 0], [3, 0.225, 0]], [0.000696294, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.288349, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.28068, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.28068, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00524107, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[0.0798099, [3, -0.0416667, 0], [3, 0.975, 0]], [0.676537, [3, -0.975, 0], [3, 0.0916667, 0]], [0.676537, [3, -0.0916667, 0], [3, 0.225, 0]], [0.699999, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
	keys.append([[-0.742414, [3, -0.0666667, 0], [3, 0.108333, 0]], [-0.566003, [3, -0.108333, 0], [3, 0.0916667, 0]], [-0.742414, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-0.566003, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-0.742414, [3, -0.0916667, 0], [3, 0.075, 0]], [-0.566003, [3, -0.075, 0], [3, 0.0833333, 0]], [-0.742414, [3, -0.0833333, 0], [3, 0.1, 0]], [-0.566003, [3, -0.1, 0], [3, 0.0666667, 0]], [-0.742414, [3, -0.0666667, 0], [3, 0.0833333, 0]], [-0.566003, [3, -0.0833333, 0], [3, 0.075, 0]], [-0.742414, [3, -0.075, 0], [3, 0.0916667, 0]], [-0.544529, [3, -0.0916667, 0], [3, 0.0916667, 0]], [-0.544529, [3, -0.0916667, 0], [3, 0.225, 0]], [1.40142, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
	keys.append([[0.43263, [3, -0.0666667, 0], [3, 0.108333, 0]], [0.0614019, [3, -0.108333, 0], [3, 0.0916667, 0]], [0.43263, [3, -0.0916667, 0], [3, 0.0833333, 0]], [0.0614019, [3, -0.0833333, 0], [3, 0.0916667, 0]], [0.43263, [3, -0.0916667, 0], [3, 0.075, 0]], [0.0614019, [3, -0.075, 0], [3, 0.0833333, 0]], [0.43263, [3, -0.0833333, 0], [3, 0.1, 0]], [0.0614019, [3, -0.1, 0], [3, 0.0666667, 0]], [0.43263, [3, -0.0666667, 0], [3, 0.0833333, 0]], [0.0614019, [3, -0.0833333, 0], [3, 0.075, 0]], [0.43263, [3, -0.075, 0], [3, 0.0916667, 0]], [0.075208, [3, -0.0916667, 0], [3, 0.0916667, 0]], [0.075208, [3, -0.0916667, 0], [3, 0.225, 0]], [0.292669, [3, -0.225, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
	keys.append([[-1.30539, [3, -0.0666667, 0], [3, 0.108333, 0]], [-0.803775, [3, -0.108333, 0], [3, 0.0916667, 0]], [-1.30539, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-0.803775, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-1.30539, [3, -0.0916667, 0], [3, 0.075, 0]], [-0.803775, [3, -0.075, 0], [3, 0.0833333, 0]], [-1.30539, [3, -0.0833333, 0], [3, 0.1, 0]], [-0.803775, [3, -0.1, 0], [3, 0.0666667, 0]], [-1.30539, [3, -0.0666667, 0], [3, 0.0833333, 0]], [-0.803775, [3, -0.0833333, 0], [3, 0.075, 0]], [-1.30539, [3, -0.075, 0], [3, 0.0916667, 0]], [-0.820649, [3, -0.0916667, 0], [3, 0.0916667, 0]], [-0.820649, [3, -0.0916667, 0], [3, 0.225, 0]], [0.00636638, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.214803, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.406552, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.406552, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.347542, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[0.14262, [3, -0.0416667, 0], [3, 0.975, 0]], [0.11961, [3, -0.975, 0], [3, 0.0916667, 0]], [0.11961, [3, -0.0916667, 0], [3, 0.225, 0]], [0.00259227, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.175, 0.55, 3.05, 3.325, 4])
	keys.append([[0.0349066, [3, -0.0583333, 0], [3, 0.125, 0]], [0.0459781, [3, -0.125, -0.0110715], [3, 0.833333, 0.07381]], [0.358915, [3, -0.833333, 0], [3, 0.0916667, 0]], [0.358915, [3, -0.0916667, 0], [3, 0.225, 0]], [1.00611, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.175, 0.55, 3.05, 3.325, 4])
	keys.append([[1.48956, [3, -0.0583333, 0], [3, 0.125, 0]], [1.48035, [3, -0.125, 0.00920482], [3, 0.833333, -0.0613654]], [1.26099, [3, -0.833333, 0], [3, 0.0916667, 0]], [1.26099, [3, -0.0916667, 0], [3, 0.225, 0]], [1.38866, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.175, 0.55, 3.05, 3.325, 4])
	keys.append([[0.9616, [3, -0.0583333, 0], [3, 0.125, 0]], [0.9592, [3, -0.125, 0], [3, 0.833333, 0]], [0.9616, [3, -0.833333, 0], [3, 0.0916667, 0]], [0.9616, [3, -0.0916667, 0], [3, 0.225, 0]], [0.256965, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.144154, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.268407, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.268407, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.444441, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.233211, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.173384, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.173384, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00423886, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[-0.288349, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.28068, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.28068, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00524107, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.125, 3.05, 3.325, 4])
	keys.append([[0.539926, [3, -0.0416667, 0], [3, 0.975, 0]], [0.820649, [3, -0.975, 0], [3, 0.0916667, 0]], [0.820649, [3, -0.0916667, 0], [3, 0.225, 0]], [0.69709, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.175, 0.225, 0.55, 3.05, 3.325, 4])
	keys.append([[-0.420357, [3, -0.0583333, 0], [3, 0.0166667, 0]], [-0.560251, [3, -0.0166667, 0], [3, 0.108333, 0]], [-0.417134, [3, -0.108333, -0.0177769], [3, 0.833333, 0.136745]], [-0.0966839, [3, -0.833333, 0], [3, 0.0916667, 0]], [-0.0966839, [3, -0.0916667, 0], [3, 0.225, 0]], [1.40042, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.175, 0.55, 0.825, 1.05, 1.3, 1.55, 1.775, 2.05, 2.3, 2.525, 2.8, 3.05, 3.325, 4])
	keys.append([[-0.819114, [3, -0.0583333, 0], [3, 0.125, 0]], [-0.461692, [3, -0.125, 0], [3, 0.0916667, 0]], [-0.610865, [3, -0.0916667, 0], [3, 0.075, 0]], [-0.223402, [3, -0.075, 0], [3, 0.0833333, 0]], [-0.460767, [3, -0.0833333, 0], [3, 0.0833333, 0]], [-0.0436332, [3, -0.0833333, 0], [3, 0.075, 0]], [-0.312414, [3, -0.075, 0], [3, 0.0916667, 0]], [0.0610865, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-0.207694, [3, -0.0833333, 0], [3, 0.075, 0]], [0.195477, [3, -0.075, 0], [3, 0.0916667, 0]], [-0.0593412, [3, -0.0916667, 0], [3, 0.0833333, 0]], [0.159578, [3, -0.0833333, 0], [3, 0.0916667, 0]], [0.159578, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.291301, [3, -0.225, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.175, 0.55, 0.825, 1.05, 3.05, 3.325, 4])
	keys.append([[-0.312894, [3, -0.0583333, 0], [3, 0.125, 0]], [-0.131882, [3, -0.125, -0.0474176], [3, 0.0916667, 0.0347729]], [-0.0663225, [3, -0.0916667, 0], [3, 0.075, 0]], [-0.0663225, [3, -0.075, 0], [3, 0.666667, 0]], [0.29457, [3, -0.666667, 0], [3, 0.0916667, 0]], [0.29457, [3, -0.0916667, 0], [3, 0.225, 0]], [0.00244081, [3, -0.225, 0], [3, 0, 0]]])

	try:
		motion = ALProxy("ALMotion", robotIP, port)
		motion.angleInterpolationBezier(names, times, keys)
		posture = ALProxy("ALRobotPosture", robotIP, port)
		#posture.goToPosture("StandInit", 1.0)
	except BaseException, err:
		print
		err


if __name__ == "__main__":
	robotIP = "127.0.0.1"
	port = 9559

	if len(sys.argv) <= 1:
		print "(robotIP default: 127.0.0.1)"
	elif len(sys.argv) <= 2:
		robotIP = sys.argv[1]
	else:
		port = int(sys.argv[2])
		robotIP = sys.argv[1]

	start = time.time()
	main(robotIP, port)
	end = time.time()
	print ("%.2f seconds elapsed" % (end-start))
