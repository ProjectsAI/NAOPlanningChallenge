def main(nao_ip, nao_port):
    # Choregraphe bezier export in Python.
    from naoqi import ALProxy
    names = list()
    times = list()
    keys = list()

    names.append("LAnklePitch")
    times.append([1.8])
    keys.append([[-0.359129, [3, -0.6, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([1.8])
    keys.append([[-0.0766796, [3, -0.6, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[-1.06916, [3, -0.422222, 0], [3, 0.288889, 0]], [-1.05688, [3, -0.288889, 0], [3, 0.155556, 0]],
                 [-1.05688, [3, -0.155556, 0], [3, 0.155556, 0]], [-1.04461, [3, -0.155556, 0], [3, 0.2, 0]],
                 [-1.04461, [3, -0.2, 0], [3, 0.222222, 0]], [-1.04461, [3, -0.222222, 0], [3, 0.133333, 0]],
                 [-1.04461, [3, -0.133333, 0], [3, 0.0444444, 0]], [-1.04461, [3, -0.0444444, 0], [3, 0.222222, 0]],
                 [-1.04461, [3, -0.222222, 0], [3, 0.177778, 0]], [-1.04461, [3, -0.177778, 0], [3, 0.155556, 0]],
                 [-1.04461, [3, -0.155556, 0], [3, 0.177778, 0]], [-1.04461, [3, -0.177778, 0], [3, 0.222222, 0]],
                 [-1.04461, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[-1.76722, [3, -0.422222, 0], [3, 0.288889, 0]], [-1.75341, [3, -0.288889, 0], [3, 0.155556, 0]],
                 [-1.75495, [3, -0.155556, 0], [3, 0.155556, 0]], [-1.75034, [3, -0.155556, 0], [3, 0.2, 0]],
                 [-1.75034, [3, -0.2, 0], [3, 0.222222, 0]], [-1.75034, [3, -0.222222, 0], [3, 0.133333, 0]],
                 [-1.75034, [3, -0.133333, 0], [3, 0.0444444, 0]], [-1.75034, [3, -0.0444444, 0], [3, 0.222222, 0]],
                 [-1.75034, [3, -0.222222, 0], [3, 0.177778, 0]], [-1.75034, [3, -0.177778, 0], [3, 0.155556, 0]],
                 [-1.75034, [3, -0.155556, 0], [3, 0.177778, 0]], [-1.75034, [3, -0.177778, 0], [3, 0.222222, 0]],
                 [-1.75034, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([1.26667])
    keys.append([[0.922933, [3, -0.422222, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([1.8])
    keys.append([[-0.291681, [3, -0.6, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([1.8])
    keys.append([[0.144004, [3, -0.6, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([1.8])
    keys.append([[-0.547681, [3, -0.6, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([1.8])
    keys.append([[0.999849, [3, -0.6, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[0.720938, [3, -0.422222, 0], [3, 0.288889, 0]],
                 [0.733209, [3, -0.288889, -0.00498558], [3, 0.155556, 0.00268454]],
                 [0.743948, [3, -0.155556, -0.00460214], [3, 0.155556, 0.00460214]],
                 [0.760822, [3, -0.155556, 0], [3, 0.2, 0]], [0.760822, [3, -0.2, 0], [3, 0.222222, 0]],
                 [0.760822, [3, -0.222222, 0], [3, 0.133333, 0]], [0.760822, [3, -0.133333, 0], [3, 0.0444444, 0]],
                 [0.760822, [3, -0.0444444, 0], [3, 0.222222, 0]], [0.760822, [3, -0.222222, 0], [3, 0.177778, 0]],
                 [0.760822, [3, -0.177778, 0], [3, 0.155556, 0]], [0.760822, [3, -0.155556, 0], [3, 0.177778, 0]],
                 [0.760822, [3, -0.177778, 0], [3, 0.222222, 0]], [0.760822, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[0.535324, [3, -0.422222, 0], [3, 0.288889, 0]], [0.516916, [3, -0.288889, 0], [3, 0.155556, 0]],
                 [0.516916, [3, -0.155556, 0], [3, 0.155556, 0]], [0.501576, [3, -0.155556, 0], [3, 0.2, 0]],
                 [0.50311, [3, -0.2, 0], [3, 0.222222, 0]], [0.50311, [3, -0.222222, 0], [3, 0.133333, 0]],
                 [0.50311, [3, -0.133333, 0], [3, 0.0444444, 0]], [0.50311, [3, -0.0444444, 0], [3, 0.222222, 0]],
                 [0.50311, [3, -0.222222, 0], [3, 0.177778, 0]], [0.50311, [3, -0.177778, 0], [3, 0.155556, 0]],
                 [0.50311, [3, -0.155556, 0], [3, 0.177778, 0]], [0.50311, [3, -0.177778, 0], [3, 0.222222, 0]],
                 [0.50311, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([1.26667])
    keys.append([[-1.01402, [3, -0.422222, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([1.8])
    keys.append([[0.0383229, [3, -0.6, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([1.8])
    keys.append([[0.296102, [3, -0.6, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[1.02629, [3, -0.422222, 0], [3, 0.288889, 0]], [0.523136, [3, -0.288889, 0], [3, 0.155556, 0]],
                 [1.22264, [3, -0.155556, 0], [3, 0.155556, 0]], [0.681137, [3, -0.155556, 0], [3, 0.2, 0]],
                 [1.11066, [3, -0.2, 0], [3, 0.222222, 0]], [0.656595, [3, -0.222222, 0], [3, 0.133333, 0]],
                 [1.11066, [3, -0.133333, 0], [3, 0.0444444, 0]], [0.656595, [3, -0.0444444, 0], [3, 0.222222, 0]],
                 [1.11066, [3, -0.222222, 0], [3, 0.177778, 0]], [0.656595, [3, -0.177778, 0], [3, 0.155556, 0]],
                 [1.11066, [3, -0.155556, 0], [3, 0.177778, 0]], [0.656595, [3, -0.177778, 0], [3, 0.222222, 0]],
                 [1.11066, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[0.276078, [3, -0.422222, 0], [3, 0.288889, 0]], [-0.029188, [3, -0.288889, 0], [3, 0.155556, 0]],
                 [0.408002, [3, -0.155556, 0], [3, 0.155556, 0]], [-0.138102, [3, -0.155556, 0], [3, 0.2, 0]],
                 [0.391128, [3, -0.2, 0], [3, 0.222222, 0]], [-0.0982179, [3, -0.222222, 0], [3, 0.133333, 0]],
                 [0.391128, [3, -0.133333, 0], [3, 0.0444444, 0]], [-0.0982179, [3, -0.0444444, 0], [3, 0.222222, 0]],
                 [0.391128, [3, -0.222222, 0], [3, 0.177778, 0]], [-0.0982179, [3, -0.177778, 0], [3, 0.155556, 0]],
                 [0.391128, [3, -0.155556, 0], [3, 0.177778, 0]], [-0.0982179, [3, -0.177778, 0], [3, 0.222222, 0]],
                 [0.391128, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([1.26667, 2.13333])
    keys.append([[0.920751, [3, -0.422222, 0], [3, 0.288889, 0]], [0.452752, [3, -0.288889, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([1.8])
    keys.append([[-0.125845, [3, -0.6, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([1.8])
    keys.append([[-0.309848, [3, -0.6, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([1.8])
    keys.append([[0.470523, [3, -0.6, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[0.889762, [3, -0.422222, 0], [3, 0.288889, 0]], [0.868286, [3, -0.288889, 0], [3, 0.155556, 0]],
                 [0.92351, [3, -0.155556, -0.0112495], [3, 0.155556, 0.0112495]],
                 [0.935783, [3, -0.155556, 0], [3, 0.2, 0]],
                 [0.89283, [3, -0.2, 0.00552293], [3, 0.222222, -0.00613659]],
                 [0.886694, [3, -0.222222, 0], [3, 0.133333, 0]], [0.89283, [3, -0.133333, 0], [3, 0.0444444, 0]],
                 [0.886694, [3, -0.0444444, 0], [3, 0.222222, 0]], [0.89283, [3, -0.222222, 0], [3, 0.177778, 0]],
                 [0.886694, [3, -0.177778, 0], [3, 0.155556, 0]], [0.89283, [3, -0.155556, 0], [3, 0.177778, 0]],
                 [0.886694, [3, -0.177778, 0], [3, 0.222222, 0]], [0.89283, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append(
        [1.26667, 2.13333, 2.6, 3.06667, 3.66667, 4.33333, 4.73333, 4.86667, 5.53333, 6.06667, 6.53333, 7.06667,
         7.73333])
    keys.append([[-0.181053, [3, -0.422222, 0], [3, 0.288889, 0]],
                 [-0.101286, [3, -0.288889, -0.0222685], [3, 0.155556, 0.0119907]],
                 [-0.0782759, [3, -0.155556, 0], [3, 0.155556, 0]], [-0.16418, [3, -0.155556, 0], [3, 0.2, 0]],
                 [-0.075208, [3, -0.2, 0], [3, 0.222222, 0]], [-0.104354, [3, -0.222222, 0], [3, 0.133333, 0]],
                 [-0.075208, [3, -0.133333, 0], [3, 0.0444444, 0]], [-0.104354, [3, -0.0444444, 0], [3, 0.222222, 0]],
                 [-0.075208, [3, -0.222222, 0], [3, 0.177778, 0]], [-0.104354, [3, -0.177778, 0], [3, 0.155556, 0]],
                 [-0.075208, [3, -0.155556, 0], [3, 0.177778, 0]], [-0.104354, [3, -0.177778, 0], [3, 0.222222, 0]],
                 [-0.075208, [3, -0.222222, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([1.26667, 2.13333])
    keys.append([[0.96331, [3, -0.422222, 0], [3, 0.288889, 0]], [0.682588, [3, -0.288889, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", nao_ip, nao_port)
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err
