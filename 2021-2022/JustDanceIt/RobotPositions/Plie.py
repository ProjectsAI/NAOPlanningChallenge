import sys
import time
import numpy as np
from naoqi import ALProxy

start = time.time()

def main(robotIP, port, unit_time):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.64, 1.12, 1.6, 2.12, 2.64, 3.12, 3.88])
    keys.append([[-0.066004, [3, -0.213333, 0], [3, 0.16, 0]], [0.217786, [3, -0.16, 0], [3, 0.16, 0]], [-0.066004, [3, -0.16, 0.0949853], [3, 0.173333, -0.102901]], [-0.375872, [3, -0.173333, 0], [3, 0.173333, 0]], [0.00456004, [3, -0.173333, 0], [3, 0.16, 0]], [-0.365133, [3, -0.16, 0], [3, 0.253333, 0]], [-0.144238, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.64, 1.12, 1.6, 2.12, 2.64, 3.12, 3.88])
    keys.append([[-0.0629359, [3, -0.213333, 0], [3, 0.16, 0]], [-0.918907, [3, -0.16, 0], [3, 0.16, 0]], [-0.0629359, [3, -0.16, 0], [3, 0.173333, 0]], [-1.02936, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.016916, [3, -0.173333, 0], [3, 0.16, 0]], [-1.02015, [3, -0.16, 0], [3, 0.253333, 0]], [-0.032256, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[-0.0158923, [3, -0.4, 0], [3, 0.333333, 0]], [-0.493928, [3, -0.333333, 0], [3, 0.173333, 0]], [-0.430072, [3, -0.173333, 0], [3, 0.16, 0]], [-0.493928, [3, -0.16, 0], [3, 0.226667, 0]], [0.093532, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[-0.0973648, [3, -0.4, 0], [3, 0.333333, 0]], [0.0729092, [3, -0.333333, -0.0528154], [3, 0.173333, 0.027464]], [0.143473, [3, -0.173333, 0], [3, 0.16, 0]], [0.0729092, [3, -0.16, 0.0358642], [3, 0.226667, -0.0508076]], [-0.116542, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[-1.44345, [3, -0.226667, 0], [3, 0.16, 0]], [-0.800706, [3, -0.16, 0], [3, 0.16, 0]], [-0.969447, [3, -0.16, 0], [3, 0.173333, 0]], [-0.6335, [3, -0.173333, -0.139594], [3, 0.173333, 0.139594]], [-0.131882, [3, -0.173333, 0], [3, 0.16, 0]], [-0.6335, [3, -0.16, 0], [3, 0.24, 0]], [-0.427944, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[-0.744032, [3, -0.226667, 0], [3, 0.16, 0]], [-2.05101, [3, -0.16, 0], [3, 0.16, 0]], [-0.0245859, [3, -0.16, 0], [3, 0.173333, 0]], [-0.483252, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.481718, [3, -0.173333, 0], [3, 0.16, 0]], [-0.483252, [3, -0.16, 0.00153411], [3, 0.24, -0.00230117]], [-1.17509, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.6, 1.08, 1.56, 2.08, 3.08, 3.88])
    keys.append([[0.613843, [3, -0.2, 0], [3, 0.16, 0]], [0.613843, [3, -0.16, 0], [3, 0.16, 0]], [0.613843, [3, -0.16, 0], [3, 0.173333, 0]], [0.614934, [3, -0.173333, 0], [3, 0.333333, 0]], [0.613479, [3, -0.333333, 0.00145501], [3, 0.266667, -0.00116401]], [0.3048, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.274614, [3, -0.4, 0], [3, 0.333333, 0]], [0.34978, [3, -0.333333, -0.0289308], [3, 0.173333, 0.015044]], [0.406538, [3, -0.173333, 0], [3, 0.16, 0]], [0.34978, [3, -0.16, 0.0370256], [3, 0.226667, -0.052453]], [0.138102, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.134638, [3, -0.4, 0], [3, 0.333333, 0]], [0.014986, [3, -0.333333, 0], [3, 0.173333, 0]], [0.0870839, [3, -0.173333, 0], [3, 0.16, 0]], [0.014986, [3, -0.16, 0], [3, 0.226667, 0]], [0.11816, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[-0.289883, [3, -0.4, 0], [3, 0.333333, 0]], [-0.54146, [3, -0.333333, 0.14694], [3, 0.173333, -0.0764089]], [-0.959931, [3, -0.173333, 0], [3, 0.16, 0]], [-0.54146, [3, -0.16, -0.108712], [3, 0.226667, 0.154009]], [-0.171766, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.0346476, [3, -0.4, 0], [3, 0.333333, 0]], [0.692733, [3, -0.333333, 0], [3, 0.173333, 0]], [0.67586, [3, -0.173333, 0], [3, 0.16, 0]], [0.692733, [3, -0.16, 0], [3, 0.226667, 0]], [-0.090548, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[1.72417, [3, -0.226667, 0], [3, 0.16, 0]], [1.54623, [3, -0.16, 0.177943], [3, 0.16, -0.177943]], [0.651908, [3, -0.16, 0], [3, 0.173333, 0]], [1.64287, [3, -0.173333, 0], [3, 0.173333, 0]], [1.64287, [3, -0.173333, 0], [3, 0.16, 0]], [1.64287, [3, -0.16, 0], [3, 0.24, 0]], [1.48027, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[0.789967, [3, -0.226667, 0], [3, 0.16, 0]], [0.484702, [3, -0.16, 0.128089], [3, 0.16, -0.128089]], [0.021434, [3, -0.16, 0], [3, 0.173333, 0]], [0.911154, [3, -0.173333, -0.194562], [3, 0.173333, 0.194562]], [1.18881, [3, -0.173333, 0], [3, 0.16, 0]], [0.911154, [3, -0.16, 0.146855], [3, 0.24, -0.220282]], [0.0873961, [3, -0.24, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.6, 1.08, 1.56, 2.08, 3.08, 3.88])
    keys.append([[-0.79312, [3, -0.2, 0], [3, 0.16, 0]], [-0.813062, [3, -0.16, 0], [3, 0.16, 0]], [-0.79312, [3, -0.16, 0], [3, 0.173333, 0]], [-1.42666, [3, -0.173333, 0], [3, 0.333333, 0]], [-1.15514, [3, -0.333333, -0.271517], [3, 0.266667, 0.217214]], [0.145688, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.00098731, [3, -0.4, 0], [3, 0.333333, 0]], [-0.0802851, [3, -0.333333, 0], [3, 0.173333, 0]], [0.258309, [3, -0.173333, 0], [3, 0.16, 0]], [-0.0802851, [3, -0.16, 0], [3, 0.226667, 0]], [0.107422, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.179769, [3, -0.4, 0], [3, 0.333333, 0]], [0.261799, [3, -0.333333, -0.0271751], [3, 0.173333, 0.014131]], [0.303687, [3, -0.173333, 0], [3, 0.16, 0]], [0.303687, [3, -0.16, 0], [3, 0.226667, 0]], [0.07214, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[1.24718, [3, -0.226667, 0], [3, 0.16, 0]], [0.673468, [3, -0.16, 0], [3, 0.16, 0]], [0.833004, [3, -0.16, 0], [3, 0.173333, 0]], [0.398883, [3, -0.173333, 0], [3, 0.173333, 0]], [0.658129, [3, -0.173333, 0], [3, 0.16, 0]], [0.398883, [3, -0.16, 0.00613657], [3, 0.24, -0.00920485]], [0.389678, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[0.785367, [3, -0.226667, 0], [3, 0.16, 0]], [2.08926, [3, -0.16, 0], [3, 0.16, 0]], [-0.273093, [3, -0.16, 0], [3, 0.173333, 0]], [0.516916, [3, -0.173333, -0.263081], [3, 0.173333, 0.263081]], [1.30539, [3, -0.173333, 0], [3, 0.16, 0]], [0.516916, [3, -0.16, 0], [3, 0.24, 0]], [1.17654, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.6, 1.08, 1.56, 2.08, 3.08, 3.88])
    keys.append([[0.585115, [3, -0.2, 0], [3, 0.16, 0]], [0.585115, [3, -0.16, 0], [3, 0.16, 0]], [0.585115, [3, -0.16, 0], [3, 0.173333, 0]], [0.587661, [3, -0.173333, -0.000189252], [3, 0.333333, 0.000363946]], [0.588025, [3, -0.333333, 0], [3, 0.266667, 0]], [0.3068, [3, -0.266667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.277401, [3, -0.4, 0], [3, 0.333333, 0]], [0.0288929, [3, -0.333333, 0], [3, 0.173333, 0]], [0.355635, [3, -0.173333, 0], [3, 0.16, 0]], [0.0288929, [3, -0.16, 0], [3, 0.226667, 0]], [0.131882, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[-0.159001, [3, -0.4, 0], [3, 0.333333, 0]], [-0.439722, [3, -0.333333, 0.107313], [3, 0.173333, -0.0558026]], [-0.648346, [3, -0.173333, 0], [3, 0.16, 0]], [-0.439722, [3, -0.16, -0.0803346], [3, 0.226667, 0.113807]], [-0.06592, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([3.88])
    keys.append([[-0.171766, [3, -1.29333, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([1.2, 2.2, 2.72, 3.2, 3.88])
    keys.append([[0.0277265, [3, -0.4, 0], [3, 0.333333, 0]], [0.606045, [3, -0.333333, 0], [3, 0.173333, 0]], [0.142776, [3, -0.173333, 0], [3, 0.16, 0]], [0.606045, [3, -0.16, 0], [3, 0.226667, 0]], [-0.091998, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[1.78715, [3, -0.226667, 0], [3, 0.16, 0]], [1.5095, [3, -0.16, 0.137548], [3, 0.16, -0.137548]], [0.96186, [3, -0.16, 0], [3, 0.173333, 0]], [1.17815, [3, -0.173333, -0.055224], [3, 0.173333, 0.055224]], [1.2932, [3, -0.173333, 0], [3, 0.16, 0]], [1.17815, [3, -0.16, 0], [3, 0.24, 0]], [1.49569, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.68, 1.16, 1.64, 2.16, 2.68, 3.16, 3.88])
    keys.append([[-0.710284, [3, -0.226667, 0], [3, 0.16, 0]], [-0.382007, [3, -0.16, -0.116584], [3, 0.16, 0.116584]], [-0.01078, [3, -0.16, 0], [3, 0.173333, 0]], [-1.63068, [3, -0.173333, 0], [3, 0.173333, 0]], [-1.57546, [3, -0.173333, 0], [3, 0.16, 0]], [-1.63068, [3, -0.16, 0], [3, 0.24, 0]], [-0.104354, [3, -0.24, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.6, 1.08, 1.56, 2.08, 3.08, 3.88])
    keys.append([[0.826783, [3, -0.2, 0], [3, 0.16, 0]], [0.849794, [3, -0.16, 0], [3, 0.16, 0]], [0.826783, [3, -0.16, 0], [3, 0.173333, 0]], [1.0937, [3, -0.173333, 0], [3, 0.333333, 0]], [0.27301, [3, -0.333333, 0.189193], [3, 0.266667, -0.151355]], [0.0720561, [3, -0.266667, 0], [3, 0, 0]]])

    mul = unit_time/3.95
    times_unit = [list(np.array(t, dtype=float)*mul) for t in times]

    try:
        motion = ALProxy("ALMotion", robotIP, port)
        motion.angleInterpolationBezier(names, times_unit, keys)
    except BaseException, err:
        print err

if __name__ == "__main__":
    robotIP = "127.0.0.1" #"192.168.1.11"
    port = 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    unit_time = float(sys.argv[3])

    main(robotIP, port, unit_time)

end = time.time()
print(end-start)