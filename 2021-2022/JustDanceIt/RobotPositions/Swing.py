import sys
import time
import numpy as np
from naoqi import ALProxy

start = time.time()

def main(robotIP, port, unit_time):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.48, 0.96, 1.48, 1.96, 2.48, 2.96, 3.36, 3.92])
    keys.append([[-0.368202, [3, -0.16, 0], [3, 0.16, 0]], [0.434081, [3, -0.16, 0], [3, 0.173333, 0]], [-0.369736, [3, -0.173333, 0], [3, 0.16, 0]], [0.38806, [3, -0.16, 0], [3, 0.173333, 0]], [-0.30224, [3, -0.173333, 0], [3, 0.16, 0]], [0.38806, [3, -0.16, 0], [3, 0.133333, 0]], [-0.369736, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.144238, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.48, 0.96, 1.48, 1.96, 2.48, 2.96, 3.36, 3.92])
    keys.append([[0.87127, [3, -0.16, 0], [3, 0.16, 0]], [-0.012314, [3, -0.16, 0.244213], [3, 0.173333, -0.264564]], [-0.65506, [3, -0.173333, 0], [3, 0.16, 0]], [0.032172, [3, -0.16, -0.204206], [3, 0.173333, 0.221223]], [0.621227, [3, -0.173333, 0], [3, 0.16, 0]], [0.032172, [3, -0.16, 0.232052], [3, 0.133333, -0.193377]], [-0.65506, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.032256, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.0608078, [3, -0.186667, 0], [3, 0.333333, 0]], [0.21881, [3, -0.333333, 0], [3, 0.333333, 0]], [0.162052, [3, -0.333333, 0], [3, 0.293333, 0]], [0.207694, [3, -0.293333, 0], [3, 0.16, 0]], [0.093532, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.0621712, [3, -0.186667, 0], [3, 0.333333, 0]], [0.0330253, [3, -0.333333, 0.0258224], [3, 0.333333, -0.0258224]], [-0.0927629, [3, -0.333333, 0], [3, 0.293333, 0]], [0.00437015, [3, -0.293333, 0], [3, 0.16, 0]], [-0.116542, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[-0.759288, [3, -0.173333, 0], [3, 0.16, 0]], [-0.00609404, [3, -0.16, 0], [3, 0.173333, 0]], [-0.711735, [3, -0.173333, 0], [3, 0.333333, 0]], [-0.0183661, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.711735, [3, -0.293333, 0], [3, 0.173333, 0]], [-0.427944, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[-0.506262, [3, -0.173333, 0], [3, 0.16, 0]], [-0.231677, [3, -0.16, -0.0254888], [3, 0.173333, 0.0276129]], [-0.204064, [3, -0.173333, 0], [3, 0.333333, 0]], [-0.213269, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.204064, [3, -0.293333, 0], [3, 0.173333, 0]], [-1.17509, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.92, 3.92])
    keys.append([[0.577843, [3, -0.306667, 0], [3, 1, 0]], [0.3048, [3, -1, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.397335, [3, -0.186667, 0], [3, 0.333333, 0]], [-0.38654, [3, -0.333333, 0.0138056], [3, 0.333333, -0.0138056]], [-0.400345, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.354607, [3, -0.293333, -0.0457381], [3, 0.16, 0.0249481]], [0.138102, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[-0.077054, [3, -0.186667, 0], [3, 0.333333, 0]], [-0.130744, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0119179, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.18615, [3, -0.293333, 0], [3, 0.16, 0]], [0.11816, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[-0.443284, [3, -0.186667, 0], [3, 0.333333, 0]], [-0.500042, [3, -0.333333, 0.00613659], [3, 0.333333, -0.00613659]], [-0.506179, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.506179, [3, -0.293333, 0], [3, 0.16, 0]], [-0.171766, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.0147056, [3, -0.186667, 0], [3, 0.333333, 0]], [0.0423176, [3, -0.333333, -0.00741434], [3, 0.333333, 0.00741434]], [0.0591916, [3, -0.333333, 0], [3, 0.293333, 0]], [0.0538045, [3, -0.293333, 0.00538713], [3, 0.16, -0.00293843]], [-0.090548, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[-0.243948, [3, -0.173333, 0], [3, 0.16, 0]], [0.917291, [3, -0.16, 0], [3, 0.173333, 0]], [0.889678, [3, -0.173333, 0.00159551], [3, 0.333333, -0.00306829]], [0.88661, [3, -0.333333, 0], [3, 0.293333, 0]], [0.889678, [3, -0.293333, -0.00306829], [3, 0.173333, 0.00181308]], [1.48027, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[1.36982, [3, -0.173333, 0], [3, 0.16, 0]], [0.207048, [3, -0.16, 0.171336], [3, 0.173333, -0.185614]], [0.021434, [3, -0.173333, 0], [3, 0.333333, 0]], [0.863599, [3, -0.333333, 0], [3, 0.293333, 0]], [0.021434, [3, -0.293333, 0], [3, 0.173333, 0]], [0.0873961, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.92, 3.92])
    keys.append([[-0.374338, [3, -0.306667, 0], [3, 1, 0]], [0.145688, [3, -1, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[-0.0726446, [3, -0.186667, 0], [3, 0.333333, 0]], [0.181999, [3, -0.333333, -0.0256947], [3, 0.333333, 0.0256947]], [0.207694, [3, -0.333333, 0], [3, 0.293333, 0]], [0.162052, [3, -0.293333, 0.0216274], [3, 0.16, -0.0117967]], [0.107422, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.34383, [3, -0.186667, 0], [3, 0.333333, 0]], [0.165806, [3, -0.333333, 0.0580333], [3, 0.333333, -0.0580333]], [-0.00437015, [3, -0.333333, 0], [3, 0.293333, 0]], [0.0927629, [3, -0.293333, 0], [3, 0.16, 0]], [0.07214, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[1.26866, [3, -0.173333, 0], [3, 0.16, 0]], [0.506262, [3, -0.16, 0.199788], [3, 0.173333, -0.216437]], [0.019984, [3, -0.173333, 0], [3, 0.333333, 0]], [0.628982, [3, -0.333333, 0], [3, 0.293333, 0]], [0.019984, [3, -0.293333, 0], [3, 0.173333, 0]], [0.389678, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[0.628898, [3, -0.173333, 0], [3, 0.16, 0]], [0.354312, [3, -0.16, 0], [3, 0.173333, 0]], [0.615092, [3, -0.173333, 0], [3, 0.333333, 0]], [0.369652, [3, -0.333333, 0], [3, 0.293333, 0]], [0.615092, [3, -0.293333, -0.169062], [3, 0.173333, 0.0999]], [1.17654, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.92, 3.92])
    keys.append([[0.81166, [3, -0.306667, 0], [3, 1, 0]], [0.3068, [3, -1, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.435402, [3, -0.186667, 0], [3, 0.333333, 0]], [-0.331597, [3, -0.333333, 0.0230104], [3, 0.333333, -0.0230104]], [-0.354607, [3, -0.333333, 0.0121895], [3, 0.293333, -0.0107267]], [-0.400345, [3, -0.293333, 0], [3, 0.16, 0]], [0.131882, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[-0.488811, [3, -0.186667, 0], [3, 0.333333, 0]], [0.0204776, [3, -0.333333, -0.112493], [3, 0.333333, 0.112493]], [0.18615, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.0119179, [3, -0.293333, 0.054368], [3, 0.16, -0.0296553]], [-0.06592, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([3.92])
    keys.append([[-0.171766, [3, -1.30667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.56, 1.56, 2.56, 3.44, 3.92])
    keys.append([[0.0461345, [3, -0.186667, 0], [3, 0.333333, 0]], [0.0246584, [3, -0.333333, 0], [3, 0.333333, 0]], [0.0538045, [3, -0.333333, -0.00612174], [3, 0.293333, 0.00538713]], [0.0591916, [3, -0.293333, 0], [3, 0.16, 0]], [-0.091998, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[0.289967, [3, -0.173333, 0], [3, 0.16, 0]], [0.948054, [3, -0.16, -0.131801], [3, 0.173333, 0.142785]], [1.11373, [3, -0.173333, 0], [3, 0.333333, 0]], [0.823801, [3, -0.333333, 0], [3, 0.293333, 0]], [1.11373, [3, -0.293333, -0.140777], [3, 0.173333, 0.0831865]], [1.49569, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.52, 1, 1.52, 2.52, 3.4, 3.92])
    keys.append([[-0.04913, [3, -0.173333, 0], [3, 0.16, 0]], [-0.0537319, [3, -0.16, 0.00460191], [3, 0.173333, -0.0049854]], [-0.679603, [3, -0.173333, 0], [3, 0.333333, 0]], [-0.019984, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.679603, [3, -0.293333, 0], [3, 0.173333, 0]], [-0.104354, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.92, 3.92])
    keys.append([[-0.0414599, [3, -0.306667, 0], [3, 1, 0]], [0.0720561, [3, -1, 0], [3, 0, 0]]])

    mul = unit_time/4.07
    times_unit = [list(np.array(t, dtype=float)*mul) for t in times]

    try:
        motion = ALProxy("ALMotion", robotIP, port)
        motion.angleInterpolationBezier(names, times_unit, keys)
    except BaseException, err:
        print err

if __name__ == "__main__":
    robotIP = "127.0.0.1" #"192.168.1.11"
    port = 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    unit_time = float(sys.argv[3])

    main(robotIP, port, unit_time)

end = time.time()
print(end-start)