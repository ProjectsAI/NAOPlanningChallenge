import sys
import time
import numpy as np
from naoqi import ALProxy

start = time.time()

def main(robotIP, port, unit_time):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([1.26667, 3.53333, 4.33333, 5.73333])
    keys.append([[-0.012314, [3, -0.422222, 0], [3, 0.755556, 0]], [0.00609404, [3, -0.755556, 0], [3, 0.266667, 0]], [0.00609404, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.144238, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([1.26667, 3.53333, 4.33333, 5.73333])
    keys.append([[0.00762803, [3, -0.422222, 0], [3, 0.755556, 0]], [0.00762803, [3, -0.755556, 0], [3, 0.266667, 0]], [0.00762803, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.032256, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.191576, [3, -0.422222, 0], [3, 0.244444, 0]], [0.205383, [3, -0.244444, 0], [3, 0.511111, 0]], [0.183907, [3, -0.511111, 0], [3, 0.266667, 0]], [0.183907, [3, -0.266667, 0], [3, 0.466667, 0]], [0.093532, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.0659823, [3, -0.422222, 0], [3, 0.244444, 0]], [0.0613804, [3, -0.244444, 0.00460191], [3, 0.511111, -0.00962217]], [-0.0107176, [3, -0.511111, 0], [3, 0.266667, 0]], [-0.0107176, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.116542, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[-1.4772, [3, -0.422222, 0], [3, 0.488889, 0]], [-1.55697, [3, -0.488889, 0], [3, 0.266667, 0]], [-0.010696, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.010696, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.427944, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[-1.71812, [3, -0.422222, 0], [3, 0.488889, 0]], [-1.29627, [3, -0.488889, -0.323915], [3, 0.266667, 0.176681]], [-0.216335, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.216335, [3, -0.266667, 0], [3, 0.466667, 0]], [-1.17509, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([1.26667, 3.53333, 4.33333, 5.73333])
    keys.append([[0.997114, [3, -0.422222, 0], [3, 0.755556, 0]], [0.995296, [3, -0.755556, 0], [3, 0.266667, 0]], [0.995296, [3, -0.266667, 0], [3, 0.466667, 0]], [0.3048, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.179256, [3, -0.422222, 0], [3, 0.244444, 0]], [0.162382, [3, -0.244444, 0.0168733], [3, 0.511111, -0.0352806]], [-0.24106, [3, -0.511111, 0], [3, 0.266667, 0]], [-0.24106, [3, -0.266667, 0], [3, 0.466667, 0]], [0.138102, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.0580999, [3, -0.422222, 0], [3, 0.244444, 0]], [0.07344, [3, -0.244444, 0], [3, 0.511111, 0]], [-0.145922, [3, -0.511111, 0], [3, 0.266667, 0]], [-0.145922, [3, -0.266667, 0], [3, 0.466667, 0]], [0.11816, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[-0.730228, [3, -0.422222, 0], [3, 0.244444, 0]], [-0.739431, [3, -0.244444, 0], [3, 0.511111, 0]], [-0.487856, [3, -0.511111, 0], [3, 0.266667, 0]], [-0.487856, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.171766, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.185295, [3, -0.422222, 0], [3, 0.244444, 0]], [0.169954, [3, -0.244444, 0.00146728], [3, 0.511111, -0.00306794]], [0.166886, [3, -0.511111, 0], [3, 0.266667, 0]], [0.166886, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.090548, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[1.53089, [3, -0.422222, 0], [3, 0.488889, 0]], [0.179436, [3, -0.488889, 0], [3, 0.266667, 0]], [1.7073, [3, -0.266667, 0], [3, 0.266667, 0]], [1.7073, [3, -0.266667, 0], [3, 0.466667, 0]], [1.48027, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[0.039842, [3, -0.422222, 0], [3, 0.488889, 0]], [0, [3, -0.488889, 0], [3, 0.266667, 0]], [1.35601, [3, -0.266667, 0], [3, 0.266667, 0]], [1.34374, [3, -0.266667, 0.0122714], [3, 0.466667, -0.021475]], [0.0873961, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([1.26667, 3.53333, 4.33333, 5.73333])
    keys.append([[-0.277696, [3, -0.422222, 0], [3, 0.755556, 0]], [-0.289967, [3, -0.755556, 0], [3, 0.266667, 0]], [-0.289967, [3, -0.266667, 0], [3, 0.466667, 0]], [0.145688, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[-0.411138, [3, -0.422222, 0], [3, 0.244444, 0]], [-0.401935, [3, -0.244444, -0.00920312], [3, 0.511111, 0.0192429]], [0.352792, [3, -0.511111, 0], [3, 0.266667, 0]], [0.352792, [3, -0.266667, 0], [3, 0.466667, 0]], [0.107422, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.0322537, [3, -0.422222, 0], [3, 0.244444, 0]], [0.0337877, [3, -0.244444, -0.00153397], [3, 0.511111, 0.00320739]], [0.248547, [3, -0.511111, 0], [3, 0.266667, 0]], [0.248547, [3, -0.266667, 0], [3, 0.466667, 0]], [0.07214, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[1.46348, [3, -0.422222, 0], [3, 0.488889, 0]], [1.56319, [3, -0.488889, 0], [3, 0.266667, 0]], [1.54171, [3, -0.266667, 0], [3, 0.266667, 0]], [1.54171, [3, -0.266667, 0], [3, 0.466667, 0]], [0.389678, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[1.52015, [3, -0.422222, 0], [3, 0.488889, 0]], [1.44499, [3, -0.488889, 0], [3, 0.266667, 0]], [1.65821, [3, -0.266667, 0], [3, 0.266667, 0]], [1.65668, [3, -0.266667, 0.00153411], [3, 0.466667, -0.0026847]], [1.17654, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([1.26667, 3.53333, 4.33333, 5.73333])
    keys.append([[1, [3, -0.422222, 0], [3, 0.755556, 0]], [1, [3, -0.755556, 0], [3, 0.266667, 0]], [1, [3, -0.266667, 0], [3, 0.466667, 0]], [0.3068, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.489289, [3, -0.422222, 0], [3, 0.244444, 0]], [0.490823, [3, -0.244444, 0], [3, 0.511111, 0]], [-0.279246, [3, -0.511111, 0], [3, 0.266667, 0]], [-0.279246, [3, -0.266667, 0], [3, 0.466667, 0]], [0.131882, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[-0.148778, [3, -0.422222, 0], [3, 0.244444, 0]], [-0.15338, [3, -0.244444, 0.00460191], [3, 0.511111, -0.00962217]], [-0.257691, [3, -0.511111, 0], [3, 0.266667, 0]], [-0.257691, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.06592, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([5.73333])
    keys.append([[-0.171766, [3, -1.91111, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([1.26667, 2, 3.53333, 4.33333, 5.73333])
    keys.append([[0.47666, [3, -0.422222, 0], [3, 0.244444, 0]], [0.455184, [3, -0.244444, 0.0214763], [3, 0.511111, -0.044905]], [0.0195278, [3, -0.511111, 0], [3, 0.266667, 0]], [0.0195278, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.091998, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[0.00464395, [3, -0.422222, 0], [3, 0.488889, 0]], [2.07247, [3, -0.488889, 0], [3, 0.266667, 0]], [1.56779, [3, -0.266667, 0], [3, 0.266667, 0]], [1.56779, [3, -0.266667, 0], [3, 0.466667, 0]], [1.49569, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([1.26667, 2.73333, 3.53333, 4.33333, 5.73333])
    keys.append([[-0.11816, [3, -0.422222, 0], [3, 0.488889, 0]], [-0.154976, [3, -0.488889, 0.0138962], [3, 0.266667, -0.00757972]], [-0.182588, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.182588, [3, -0.266667, 0], [3, 0.466667, 0]], [-0.104354, [3, -0.466667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([1.26667, 3.53333, 4.33333, 5.73333])
    keys.append([[0.408002, [3, -0.422222, 0], [3, 0.755556, 0]], [0.41107, [3, -0.755556, 0], [3, 0.266667, 0]], [0.41107, [3, -0.266667, 0], [3, 0.466667, 0]], [0.0720561, [3, -0.466667, 0], [3, 0, 0]]])

    mul = unit_time/5.87
    times_unit = [list(np.array(t, dtype=float)*mul) for t in times]

    try:
        motion = ALProxy("ALMotion", robotIP, port)
        motion.angleInterpolationBezier(names, times_unit, keys)
    except BaseException, err:
        print err

if __name__ == "__main__":
    robotIP = "127.0.0.1" #"192.168.1.11"
    port = 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    unit_time = float(sys.argv[3])

    main(robotIP, port, unit_time)

end = time.time()
print(end-start)
