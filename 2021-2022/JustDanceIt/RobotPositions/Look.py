import sys
import time
import numpy as np
from naoqi import ALProxy

start = time.time()

def main(robotIP, port, unit_time, stand):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.92, 1.4, 1.44, 1.96])
    keys.append([[-0.368202, [3, -0.306667, 0], [3, 0.16, 0]], [-0.144238, [3, -0.16, -0.223964], [3, 0.0133333, 0.0186636]], [0.434081, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.144238, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.92, 1.4, 1.44, 1.96])
    keys.append([[0.87127, [3, -0.306667, 0], [3, 0.16, 0]], [-0.032256, [3, -0.16, 0], [3, 0.0133333, 0]], [-0.012314, [3, -0.0133333, 0], [3, 0.173333, 0]], [-0.032256, [3, -0.173333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[-0.759288, [3, -0.32, 0], [3, 0.146667, 0]], [-0.427944, [3, -0.146667, -0.212439], [3, 0.0266667, 0.0386253]], [-0.00609404, [3, -0.0266667, 0], [3, 0.16, 0]], [-0.427944, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[-0.506262, [3, -0.32, 0], [3, 0.146667, 0]], [-1.17509, [3, -0.146667, 0], [3, 0.0266667, 0]], [-0.231677, [3, -0.0266667, 0], [3, 0.16, 0]], [-1.17509, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([1.4, 1.96])
    keys.append([[0.3048, [3, -0.466667, 0], [3, 0.186667, 0]], [0.3048, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[-0.243948, [3, -0.32, 0], [3, 0.146667, 0]], [1.48027, [3, -0.146667, 0], [3, 0.0266667, 0]], [0.917291, [3, -0.0266667, 0], [3, 0.16, 0]], [1.48027, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[1.36982, [3, -0.32, 0], [3, 0.146667, 0]], [0.0873961, [3, -0.146667, 0], [3, 0.0266667, 0]], [0.207048, [3, -0.0266667, 0], [3, 0.16, 0]], [0.0873961, [3, -0.16, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([1.4, 1.96])
    keys.append([[0.145688, [3, -0.466667, 0], [3, 0.186667, 0]], [0.145688, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[1.26866, [3, -0.32, 0], [3, 0.146667, 0]], [0.389678, [3, -0.146667, 0], [3, 0.0266667, 0]], [0.506262, [3, -0.0266667, 0], [3, 0.16, 0]], [0.389678, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[0.628898, [3, -0.32, 0], [3, 0.146667, 0]], [1.17654, [3, -0.146667, 0], [3, 0.0266667, 0]], [0.354312, [3, -0.0266667, 0], [3, 0.16, 0]], [1.17654, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([1.4, 1.96])
    keys.append([[0.3068, [3, -0.466667, 0], [3, 0.186667, 0]], [0.3068, [3, -0.186667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[0.289967, [3, -0.32, 0], [3, 0.146667, 0]], [1.49569, [3, -0.146667, 0], [3, 0.0266667, 0]], [0.948054, [3, -0.0266667, 0], [3, 0.16, 0]], [1.49569, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.96, 1.4, 1.48, 1.96])
    keys.append([[-0.04913, [3, -0.32, 0], [3, 0.146667, 0]], [-0.104354, [3, -0.146667, 0], [3, 0.0266667, 0]], [-0.0537319, [3, -0.0266667, 0], [3, 0.16, 0]], [-0.104354, [3, -0.16, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([1.4, 1.96])
    keys.append([[0.0720561, [3, -0.466667, 0], [3, 0.186667, 0]], [0.0720561, [3, -0.186667, 0], [3, 0, 0]]])

    if stand:
        names.append("LAnklePitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[-0.00361468, [3, -0.173333, 0], [3, 0.16, 0]], [0.0608078, [3, -0.16, -0.017663], [3, 0.133333, 0.0147192]], [0.093532, [3, -0.133333, 0], [3, 0.186667, 0]], [0.093532, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[0.225266, [3, -0.173333, 0], [3, 0.16, 0]], [0.0621712, [3, -0.16, 0.062147], [3, 0.133333, -0.0517891]], [-0.116542, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.116542, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[-0.0199139, [3, -0.173333, 0], [3, 0.16, 0]], [0.435402, [3, -0.16, 0], [3, 0.133333, 0]], [0.131882, [3, -0.133333, 0], [3, 0.186667, 0]], [0.131882, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[-0.389282, [3, -0.173333, 0], [3, 0.16, 0]], [-0.488811, [3, -0.16, 0], [3, 0.133333, 0]], [-0.06592, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.06592, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("RHipYawPitch")
        times.append([1.4, 1.96])
        keys.append([[-0.171766, [3, -0.466667, 0], [3, 0.186667, 0]], [-0.171766, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[0.729549, [3, -0.173333, 0], [3, 0.16, 0]], [0.0461345, [3, -0.16, 0.149372], [3, 0.133333, -0.124477]], [-0.091998, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.091998, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[-0.489898, [3, -0.173333, 0], [3, 0.16, 0]], [-0.0726446, [3, -0.16, -0.108604], [3, 0.133333, 0.090503]], [0.107422, [3, -0.133333, 0], [3, 0.186667, 0]], [0.107422, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[0.194007, [3, -0.173333, 0], [3, 0.16, 0]], [0.34383, [3, -0.16, 0], [3, 0.133333, 0]], [0.07214, [3, -0.133333, 0], [3, 0.186667, 0]], [0.07214, [3, -0.186667, 0], [3, 0, 0]]])
        
        names.append("LHipPitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[0.298877, [3, -0.173333, 0], [3, 0.16, 0]], [0.397335, [3, -0.16, 0], [3, 0.133333, 0]], [0.138102, [3, -0.133333, 0], [3, 0.186667, 0]], [0.138102, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[-0.359491, [3, -0.173333, 0], [3, 0.16, 0]], [-0.077054, [3, -0.16, -0.0868456], [3, 0.133333, 0.0723713]], [0.11816, [3, -0.133333, 0], [3, 0.186667, 0]], [0.11816, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[-0.358915, [3, -0.173333, 0], [3, 0.16, 0]], [-0.443284, [3, -0.16, 0], [3, 0.133333, 0]], [-0.171766, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.171766, [3, -0.186667, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.52, 1, 1.4, 1.96])
        keys.append([[0.0292604, [3, -0.173333, 0], [3, 0.16, 0]], [0.0147056, [3, -0.16, 0.0145549], [3, 0.133333, -0.012129]], [-0.090548, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.090548, [3, -0.186667, 0], [3, 0, 0]]])

    mul = unit_time/2.02
    times_unit = [list(np.array(t, dtype=float)*mul) for t in times]

    try:
        motion = ALProxy("ALMotion", robotIP, port)
        motion.angleInterpolationBezier(names, times_unit, keys)
    except BaseException, err:
        print err

if __name__ == "__main__":
    robotIP = "127.0.0.1" #"192.168.1.11"
    port = 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    unit_time = float(sys.argv[3])
    stand = bool(int(sys.argv[4]))

    main(robotIP, port, unit_time, stand)

end = time.time()
print(end-start)