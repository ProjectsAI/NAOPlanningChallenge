import sys
import time
import numpy as np
from naoqi import ALProxy

start = time.time()

def main(robotIP, port, unit_time):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.52, 1.04, 1.52, 2.04, 3.04, 3.92])
    keys.append([[0.205514, [3, -0.173333, 0], [3, 0.173333, 0]], [-0.200996, [3, -0.173333, 0], [3, 0.16, 0]], [0.00762803, [3, -0.16, -0.0532604], [3, 0.173333, 0.0576988]], [0.131882, [3, -0.173333, -0.0185426], [3, 0.333333, 0.0356588]], [0.170232, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.144238, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.52, 1.04, 1.52, 2.04, 3.04, 3.92])
    keys.append([[-1.09225, [3, -0.173333, 0], [3, 0.173333, 0]], [0.79457, [3, -0.173333, 0], [3, 0.16, 0]], [-0.214801, [3, -0.16, 0], [3, 0.173333, 0]], [0.993989, [3, -0.173333, 0], [3, 0.333333, 0]], [-1.18429, [3, -0.333333, 0], [3, 0.293333, 0]], [-0.032256, [3, -0.293333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.020944, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.767552, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.568977, [3, -0.266667, -0.108312], [3, 0.44, 0.178716]], [0.093532, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[-0.0436748, [3, -0.333333, 0], [3, 0.266667, 0]], [0.138871, [3, -0.266667, 0], [3, 0.266667, 0]], [0.100521, [3, -0.266667, 0.0321275], [3, 0.44, -0.0530103]], [-0.116542, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[-1.05228, [3, -0.186667, 0], [3, 0.173333, 0]], [-0.254602, [3, -0.173333, -0.181339], [3, 0.16, 0.16739]], [-0.00609404, [3, -0.16, 0], [3, 0.173333, 0]], [-0.984786, [3, -0.173333, 0], [3, 0.133333, 0]], [-0.966378, [3, -0.133333, -0.018408], [3, 0.106667, 0.0147264]], [-0.745483, [3, -0.106667, -0.039884], [3, 0.373333, 0.139594]], [-0.427944, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[-0.38661, [3, -0.186667, 0], [3, 0.173333, 0]], [0.06592, [3, -0.173333, 0], [3, 0.16, 0]], [-0.029188, [3, -0.16, 0.0419701], [3, 0.173333, -0.0454676]], [-0.196393, [3, -0.173333, 0.00598317], [3, 0.133333, -0.00460244]], [-0.200996, [3, -0.133333, 0.00460244], [3, 0.106667, -0.00368195]], [-0.544613, [3, -0.106667, 0.0721549], [3, 0.373333, -0.252542]], [-1.17509, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.48, 1.48, 2.48, 3.92])
    keys.append([[0.613479, [3, -0.16, 0], [3, 0.333333, 0]], [0.257844, [3, -0.333333, 0], [3, 0.333333, 0]], [0.257844, [3, -0.333333, 0], [3, 0.48, 0]], [0.3048, [3, -0.48, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.0123002, [3, -0.333333, 0], [3, 0.266667, 0]], [0.193313, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00923218, [3, -0.266667, 0], [3, 0.44, 0]], [0.138102, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.073278, [3, -0.333333, 0], [3, 0.266667, 0]], [0.014986, [3, -0.266667, 0.0258223], [3, 0.266667, -0.0258223]], [-0.0816561, [3, -0.266667, 0], [3, 0.44, 0]], [0.11816, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[-0.496974, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.493905, [3, -0.266667, -0.00306829], [3, 0.266667, 0.00306829]], [-0.404934, [3, -0.266667, -0.0405207], [3, 0.44, 0.0668591]], [-0.171766, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.34605, [3, -0.333333, 0], [3, 0.266667, 0]], [1.02254, [3, -0.266667, 0], [3, 0.266667, 0]], [0.965785, [3, -0.266667, 0.0567581], [3, 0.44, -0.0936508]], [-0.090548, [3, -0.44, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[1.15199, [3, -0.186667, 0], [3, 0.173333, 0]], [1.29159, [3, -0.173333, 0], [3, 0.16, 0]], [1.09523, [3, -0.16, 0.0395157], [3, 0.173333, -0.0428086]], [1.04461, [3, -0.173333, 0], [3, 0.133333, 0]], [1.07529, [3, -0.133333, -0.0306794], [3, 0.106667, 0.0245435]], [1.34374, [3, -0.106667, -0.0299982], [3, 0.373333, 0.104994]], [1.48027, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[0.0551821, [3, -0.186667, 0], [3, 0.173333, 0]], [1.48027, [3, -0.173333, 0], [3, 0.16, 0]], [0.144154, [3, -0.16, 0.107616], [3, 0.173333, -0.116584]], [0.0275701, [3, -0.173333, 0], [3, 0.133333, 0]], [0.0352401, [3, -0.133333, 0], [3, 0.106667, 0]], [0.021434, [3, -0.106667, 0], [3, 0.373333, 0]], [0.0873961, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.48, 1.48, 2.48, 3.92])
    keys.append([[-1.82551, [3, -0.16, 0], [3, 0.333333, 0]], [-0.93118, [3, -0.333333, -0.291461], [3, 0.333333, 0.291461]], [-0.0767419, [3, -0.333333, -0.147113], [3, 0.48, 0.211843]], [0.145688, [3, -0.48, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[-0.31765, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.594204, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0575959, [3, -0.266667, -0.0301976], [3, 0.44, 0.049826]], [0.107422, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.233874, [3, -0.333333, 0], [3, 0.266667, 0]], [0.289725, [3, -0.266667, -0.0558506], [3, 0.266667, 0.0558506]], [0.579449, [3, -0.266667, 0], [3, 0.44, 0]], [0.07214, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[1.17355, [3, -0.186667, 0], [3, 0.173333, 0]], [0.521602, [3, -0.173333, 0], [3, 0.16, 0]], [0.751701, [3, -0.16, 0], [3, 0.173333, 0]], [0.023052, [3, -0.173333, 0], [3, 0.133333, 0]], [0.636652, [3, -0.133333, -0.202829], [3, 0.106667, 0.162263]], [1.11833, [3, -0.106667, 0], [3, 0.373333, 0]], [0.389678, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[0.555266, [3, -0.186667, 0], [3, 0.173333, 0]], [1.18114, [3, -0.173333, 0], [3, 0.16, 0]], [0.96331, [3, -0.16, 0.00708065], [3, 0.173333, -0.0076707]], [0.955639, [3, -0.173333, 0], [3, 0.133333, 0]], [1.3238, [3, -0.133333, 0], [3, 0.106667, 0]], [0.593616, [3, -0.106667, 0], [3, 0.373333, 0]], [1.17654, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.48, 1.48, 2.48, 3.92])
    keys.append([[0.587661, [3, -0.16, 0], [3, 0.333333, 0]], [0.249844, [3, -0.333333, 0], [3, 0.333333, 0]], [0.249844, [3, -0.333333, 0], [3, 0.48, 0]], [0.3068, [3, -0.48, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.153147, [3, -0.333333, 0], [3, 0.266667, 0]], [0.176156, [3, -0.266667, -0.0230094], [3, 0.266667, 0.0230094]], [0.337227, [3, -0.266667, 0], [3, 0.44, 0]], [0.131882, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[-0.341547, [3, -0.333333, 0], [3, 0.266667, 0]], [-0.33541, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.622269, [3, -0.266667, 0], [3, 0.44, 0]], [-0.06592, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([3.92])
    keys.append([[-0.171766, [3, -1.30667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([1, 1.8, 2.6, 3.92])
    keys.append([[0.503266, [3, -0.333333, 0], [3, 0.266667, 0]], [0.905175, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0277265, [3, -0.266667, 0.0725603], [3, 0.44, -0.119725]], [-0.091998, [3, -0.44, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[0.719487, [3, -0.186667, 0], [3, 0.173333, 0]], [1.91908, [3, -0.173333, -0.177808], [3, 0.16, 0.164131]], [2.08321, [3, -0.16, -0.00425323], [3, 0.173333, 0.00460767]], [2.08782, [3, -0.173333, 0], [3, 0.133333, 0]], [1.48495, [3, -0.133333, 0.156525], [3, 0.106667, -0.12522]], [1.24258, [3, -0.106667, 0], [3, 0.373333, 0]], [1.49569, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.56, 1.08, 1.56, 2.08, 2.48, 2.8, 3.92])
    keys.append([[-0.00310997, [3, -0.186667, 0], [3, 0.173333, 0]], [-0.581429, [3, -0.173333, 0.146507], [3, 0.16, -0.135237]], [-0.848343, [3, -0.16, 0.098176], [3, 0.173333, -0.106357]], [-1.19503, [3, -0.173333, 0], [3, 0.133333, 0]], [-0.434165, [3, -0.133333, -0.220442], [3, 0.106667, 0.176353]], [-0.00464395, [3, -0.106667, 0], [3, 0.373333, 0]], [-0.104354, [3, -0.373333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.48, 1.48, 2.48, 3.92])
    keys.append([[1.43271, [3, -0.16, 0], [3, 0.333333, 0]], [1.23636, [3, -0.333333, 0], [3, 0.333333, 0]], [1.61833, [3, -0.333333, 0], [3, 0.48, 0]], [0.0720561, [3, -0.48, 0], [3, 0, 0]]])

    mul = unit_time/4
    times_unit = [list(np.array(t, dtype=float)*mul) for t in times]

    try:
        motion = ALProxy("ALMotion", robotIP, port)
        motion.angleInterpolationBezier(names, times_unit, keys)
    except BaseException, err:
        print err

if __name__ == "__main__":
    robotIP = "127.0.0.1" #"192.168.1.11"
    port = 9559 # Insert NAO port

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    unit_time = float(sys.argv[3])

    main(robotIP, port, unit_time)

end = time.time()
print(end-start)
