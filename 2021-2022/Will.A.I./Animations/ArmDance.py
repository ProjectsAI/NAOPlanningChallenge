import sys
import time

from naoqi import ALProxy


def main(robotIP, port):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.5, 1, 1.2, 1.5, 1.8, 2.1, 2.6, 3, 3.2, 3.5, 3.8, 4.1, 4.6, 5, 5.2, 5.5, 5.8, 6.1, 6.6, 7, 7.2, 7.5, 7.8, 8.1, 8.6, 10])
	keys.append([[-0.0046272, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.185656, [3, -0.166667, 0], [3, 0.0666667, 0]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185656, [3, -0.133333, -0.0852223], [3, 0.0666667, 0.0426111]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185656, [3, -0.133333, -0.0852223], [3, 0.0666667, 0.0426111]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185656, [3, -0.133333, -0.0852223], [3, 0.0666667, 0.0426111]], [0.0291041, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0], [3, 0.1, 0]], [0.00149202, [3, -0.1, 0], [3, 0.1, 0]], [-0.185656, [3, -0.1, 0.044486], [3, 0.166667, -0.0741434]], [-0.354396, [3, -0.166667, 0], [3, 0.466667, 0]], [-0.00261907, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.5, 1, 1.2, 1.5, 1.8, 2.1, 2.6, 3, 3.2, 3.5, 3.8, 4.1, 4.6, 5, 5.2, 5.5, 5.8, 6.1, 6.6, 7, 7.2, 7.5, 7.8, 8.1, 8.6, 10])
	keys.append([[-0.00354174, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.00157595, [3, -0.166667, 0], [3, 0.0666667, 0]], [-0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [-4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, -0.00613594], [3, 0.166667, 0.0102266]], [0.431013, [3, -0.166667, 0], [3, 0.133333, 0]], [0.00157595, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0.00613594], [3, 0.166667, -0.0102266]], [-0.431013, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.00157595, [3, -0.133333, 0], [3, 0.0666667, 0]], [-0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [-4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [0.00609397, [3, -0.1, -0.00613594], [3, 0.166667, 0.0102266]], [0.431013, [3, -0.166667, 0], [3, 0.133333, 0]], [0.00157595, [3, -0.133333, 0], [3, 0.0666667, 0]], [0.00157595, [3, -0.0666667, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0], [3, 0.1, 0]], [4.19617e-05, [3, -0.1, 0], [3, 0.1, 0]], [-0.00609397, [3, -0.1, 0.00613594], [3, 0.166667, -0.0102266]], [-0.431013, [3, -0.166667, 0], [3, 0.466667, 0]], [-0.0041901, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.35, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.417291, [3, -0.166667, 0.0357647], [3, 0.233333, -0.0500706]], [-0.607505, [3, -0.233333, 0.0371355], [3, 0.3, -0.0477457]], [-0.671934, [3, -0.3, 0], [3, 0.133333, 0]], [-0.31136, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.443284, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.417291, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.607505, [3, -0.233333, 0.0371355], [3, 0.3, -0.0477457]], [-0.671934, [3, -0.3, 0], [3, 0.133333, 0]], [-0.31136, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.443284, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.344847, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.00902358, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0858622, [3, -0.166667, 0.0162115], [3, 0.233333, -0.022696]], [-0.125746, [3, -0.233333, 0], [3, 0.3, 0]], [-0.105804, [3, -0.3, 0], [3, 0.133333, 0]], [-0.124296, [3, -0.133333, 0.0139139], [3, 0.533333, -0.0556554]], [-0.314512, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.0858622, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.125746, [3, -0.233333, 0], [3, 0.3, 0]], [-0.105804, [3, -0.3, 0], [3, 0.133333, 0]], [-0.124296, [3, -0.133333, 0.0139139], [3, 0.533333, -0.0556554]], [-0.314512, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.00744537, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[-1.00398, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.24863, [3, -0.166667, 0], [3, 0.0333333, 0]], [-1.07529, [3, -0.0333333, -0.0429523], [3, 0.0333333, 0.0429523]], [-0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0493303], [3, 0.0333333, 0.0493303]], [-1.24863, [3, -0.0333333, -0.0453384], [3, 0.0666667, 0.0906768]], [-0.990921, [3, -0.0666667, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0285789], [3, 0.166667, 0.142894]], [-1.0302, [3, -0.166667, 0], [3, 0.133333, 0]], [-1.33309, [3, -0.133333, 0.0552222], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0.083603], [3, 0.0333333, -0.083603]], [-1.33309, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.929527, [3, -0.166667, 0], [3, 0.133333, 0]], [-1.24863, [3, -0.133333, 0], [3, 0.0333333, 0]], [-1.07529, [3, -0.0333333, -0.0429523], [3, 0.0333333, 0.0429523]], [-0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0493303], [3, 0.0333333, 0.0493303]], [-1.24863, [3, -0.0333333, -0.0453384], [3, 0.0666667, 0.0906768]], [-0.990921, [3, -0.0666667, 0], [3, 0.0333333, 0]], [-1.4005, [3, -0.0333333, 0.0922825], [3, 0.0333333, -0.0922825]], [-1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.39897, [3, -0.0333333, -0.0285789], [3, 0.166667, 0.142894]], [-1.0302, [3, -0.166667, 0], [3, 0.133333, 0]], [-1.33309, [3, -0.133333, 0.0552222], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0.083603], [3, 0.0333333, -0.083603]], [-1.33309, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.34689, [3, -0.0333333, 0.0138056], [3, 0.0333333, -0.0138056]], [-1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.31468, [3, -0.0333333, -0.0999658], [3, 0.0333333, 0.0999658]], [-0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.929527, [3, -0.166667, 0], [3, 0.466667, 0]], [-1.00802, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[-1.38417, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.434165, [3, -0.166667, -0.296275], [3, 0.0333333, 0.059255]], [-0.31758, [3, -0.0333333, -0.0449974], [3, 0.0333333, 0.0449974]], [-0.16418, [3, -0.0333333, -0.0631497], [3, 0.0333333, 0.0631497]], [0.061318, [3, -0.0333333, -0.0590701], [3, 0.0333333, 0.0590701]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.104068], [3, 0.0333333, -0.104068]], [-0.434165, [3, -0.0333333, 0], [3, 0.0666667, 0]], [-0.165714, [3, -0.0666667, -0.110107], [3, 0.0333333, 0.0550536]], [0.061318, [3, -0.0333333, -0.0593258], [3, 0.0333333, 0.0593258]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.107026], [3, 0.166667, -0.535128]], [-1.73622, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185572, [3, -0.133333, -0.165672], [3, 0.0333333, 0.041418]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.174835, [3, -0.0333333, 0.0306808], [3, 0.0333333, -0.0306808]], [-0.351244, [3, -0.0333333, 0.0452529], [3, 0.0333333, -0.0452529]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.185572, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176367, [3, -0.0333333, 0.0322132], [3, 0.0333333, -0.0322132]], [-0.351244, [3, -0.0333333, 0.0449975], [3, 0.0333333, -0.0449975]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, -0.0457293], [3, 0.166667, 0.228646]], [0.376775, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.434165, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.31758, [3, -0.0333333, -0.0449974], [3, 0.0333333, 0.0449974]], [-0.16418, [3, -0.0333333, -0.0631497], [3, 0.0333333, 0.0631497]], [0.061318, [3, -0.0333333, -0.0590701], [3, 0.0333333, 0.0590701]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.104068], [3, 0.0333333, -0.104068]], [-0.434165, [3, -0.0333333, 0], [3, 0.0666667, 0]], [-0.165714, [3, -0.0666667, -0.110107], [3, 0.0333333, 0.0550536]], [0.061318, [3, -0.0333333, -0.0593258], [3, 0.0333333, 0.0593258]], [0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176453, [3, -0.0333333, 0.107026], [3, 0.166667, -0.535128]], [-1.73622, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.185572, [3, -0.133333, -0.165672], [3, 0.0333333, 0.041418]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.174835, [3, -0.0333333, 0.0306808], [3, 0.0333333, -0.0306808]], [-0.351244, [3, -0.0333333, 0.0452529], [3, 0.0333333, -0.0452529]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.185572, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.176367, [3, -0.0333333, 0.0322132], [3, 0.0333333, -0.0322132]], [-0.351244, [3, -0.0333333, 0.0449975], [3, 0.0333333, -0.0449975]], [-0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.036858, [3, -0.0333333, -0.0457293], [3, 0.166667, 0.228646]], [0.376775, [3, -0.166667, 0], [3, 0.466667, 0]], [-1.38515, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[0.251572, [3, -0.166667, 0], [3, 0.166667, 0]], [0, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.188, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0554293], [3, 0.166667, 0.277147]], [0.997728, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [1, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.188, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0554293], [3, 0.166667, 0.277147]], [0.997728, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [1, [3, -0.166667, 0], [3, 0.466667, 0]], [0.259178, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.45, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.052114, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.33437, [3, -0.233333, 0.0516766], [3, 0.3, -0.0664414]], [-0.406468, [3, -0.3, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.104354, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.052114, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.33437, [3, -0.233333, 0.0516766], [3, 0.3, -0.0664414]], [-0.406468, [3, -0.3, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.104354, [3, -0.533333, 0.027612], [3, 0.466667, -0.0241605]], [-0.443326, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[0.00159365, [3, -0.166667, 0], [3, 0.166667, 0]], [0.1335, [3, -0.166667, -0.0240729], [3, 0.233333, 0.0337021]], [0.174919, [3, -0.233333, -0.0208048], [3, 0.3, 0.0267491]], [0.276162, [3, -0.3, 0], [3, 0.133333, 0]], [0.128814, [3, -0.133333, 0], [3, 0.533333, 0]], [0.208583, [3, -0.533333, 0], [3, 0.133333, 0]], [0.1335, [3, -0.133333, 0], [3, 0.233333, 0]], [0.174919, [3, -0.233333, -0.0208048], [3, 0.3, 0.0267491]], [0.276162, [3, -0.3, 0], [3, 0.133333, 0]], [0.128814, [3, -0.133333, 0], [3, 0.533333, 0]], [0.208583, [3, -0.533333, 0], [3, 0.466667, 0]], [0.00755153, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.00420801, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.36505, [3, -0.166667, 0.00986112], [3, 0.233333, -0.0138056]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.36505, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[0.699999, [3, -0.166667, 0], [3, 0.166667, 0]], [0.731677, [3, -0.166667, -0.0316778], [3, 0.233333, 0.0443489]], [1.13358, [3, -0.233333, -0.0829957], [3, 0.3, 0.106709]], [1.30079, [3, -0.3, 0], [3, 0.133333, 0]], [0.653526, [3, -0.133333, 0], [3, 0.533333, 0]], [0.856014, [3, -0.533333, 0], [3, 0.133333, 0]], [0.731677, [3, -0.133333, 0], [3, 0.233333, 0]], [1.13358, [3, -0.233333, -0.0829957], [3, 0.3, 0.106709]], [1.30079, [3, -0.3, 0], [3, 0.133333, 0]], [0.653526, [3, -0.133333, 0], [3, 0.533333, 0]], [0.856014, [3, -0.533333, 0], [3, 0.466667, 0]], [0.691105, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[1.40432, [3, -0.166667, 0], [3, 0.166667, 0]], [0.357381, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0335774], [3, 0.0666667, 0.0671548]], [0.584411, [3, -0.0666667, -0.0429527], [3, 0.0333333, 0.0214763]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.583692, [3, -0.166667, 0], [3, 0.133333, 0]], [0.624379, [3, -0.133333, -0.35406], [3, 0.0333333, 0.088515]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.708379, [3, -0.166667, 0.0172456], [3, 0.133333, -0.0137965]], [0.357381, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0335774], [3, 0.0666667, 0.0671548]], [0.584411, [3, -0.0666667, -0.0429527], [3, 0.0333333, 0.0214763]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.583692, [3, -0.166667, 0], [3, 0.133333, 0]], [0.624379, [3, -0.133333, -0.35406], [3, 0.0333333, 0.088515]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.708379, [3, -0.166667, 0], [3, 0.466667, 0]], [1.40104, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[0.293252, [3, -0.166667, 0], [3, 0.166667, 0]], [0.159494, [3, -0.166667, 0.0422683], [3, 0.0333333, -0.00845366]], [0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.0333333, 0.0247531]], [0.159494, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.151824, [3, -0.0666667, 0.00767004], [3, 0.0333333, -0.00383502]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.166667, 0.123766]], [0.536495, [3, -0.166667, 0], [3, 0.133333, 0]], [0.0337899, [3, -0.133333, 0.186824], [3, 0.0333333, -0.0467061]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0196863], [3, 0.0333333, 0.0196863]], [0.0337899, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0157946], [3, 0.166667, 0.0789729]], [0.199975, [3, -0.166667, 0], [3, 0.133333, 0]], [0.159494, [3, -0.133333, 0.0157036], [3, 0.0333333, -0.0039259]], [0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.0333333, 0.0247531]], [0.159494, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.151824, [3, -0.0666667, 0.00767004], [3, 0.0333333, -0.00383502]], [0.0889301, [3, -0.0333333, 0.0404302], [3, 0.0333333, -0.0404302]], [-0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.066004, [3, -0.0333333, -0.0247531], [3, 0.166667, 0.123766]], [0.536495, [3, -0.166667, 0], [3, 0.133333, 0]], [0.0337899, [3, -0.133333, 0.186824], [3, 0.0333333, -0.0467061]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0196863], [3, 0.0333333, 0.0196863]], [0.0337899, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0843279, [3, -0.0333333, -0.0217316], [3, 0.0333333, 0.0217316]], [-0.052114, [3, -0.0333333, -0.0157946], [3, 0.166667, 0.0789729]], [0.199975, [3, -0.166667, -0.030547], [3, 0.466667, 0.0855317]], [0.296122, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[-0.0064736, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.573758, [3, -0.166667, 0.169084], [3, 0.0333333, -0.0338168]], [-0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.412688, [3, -0.0333333, -0.0700526], [3, 0.0333333, 0.0700526]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.0646531], [3, 0.0333333, 0.0646531]], [-0.573758, [3, -0.0333333, -0.0390318], [3, 0.0666667, 0.0780635]], [-0.412688, [3, -0.0666667, -0.0841993], [3, 0.0333333, 0.0420997]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.122614], [3, 0.166667, 0.613071]], [1.24538, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.421808, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.421808, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.574861, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.573758, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.412688, [3, -0.0333333, -0.0700526], [3, 0.0333333, 0.0700526]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.0646531], [3, 0.0333333, 0.0646531]], [-0.573758, [3, -0.0333333, -0.0390318], [3, 0.0666667, 0.0780635]], [-0.412688, [3, -0.0666667, -0.0841993], [3, 0.0333333, 0.0420997]], [-0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.763974, [3, -0.0333333, -0.122614], [3, 0.166667, 0.613071]], [1.24538, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.421808, [3, -0.133333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.421808, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.46476, [3, -0.0333333, 0.0127834], [3, 0.0333333, -0.0127834]], [-0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.472429, [3, -0.0333333, -0.0138073], [3, 0.0333333, 0.0138073]], [-0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.574861, [3, -0.166667, 0], [3, 0.466667, 0]], [0.00759608, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.35, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.31136, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.355846, [3, -0.233333, 0.0192389], [3, 0.3, -0.0247358]], [-0.443284, [3, -0.3, 0], [3, 0.133333, 0]], [-0.417291, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.671934, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.31136, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.355846, [3, -0.233333, 0.0192389], [3, 0.3, -0.0247358]], [-0.443284, [3, -0.3, 0], [3, 0.133333, 0]], [-0.417291, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.671934, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.34488, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[0.00303459, [3, -0.166667, 0], [3, 0.166667, 0]], [0.124296, [3, -0.166667, -0.0142444], [3, 0.233333, 0.0199421]], [0.144238, [3, -0.233333, -0.0199421], [3, 0.3, 0.0256399]], [0.314512, [3, -0.3, 0], [3, 0.133333, 0]], [0.0858622, [3, -0.133333, 0], [3, 0.533333, 0]], [0.105804, [3, -0.533333, -0.010249], [3, 0.133333, 0.00256225]], [0.124296, [3, -0.133333, -0.00465867], [3, 0.233333, 0.00815268]], [0.144238, [3, -0.233333, -0.0199421], [3, 0.3, 0.0256399]], [0.314512, [3, -0.3, 0], [3, 0.133333, 0]], [0.0858622, [3, -0.133333, 0], [3, 0.533333, 0]], [0.105804, [3, -0.533333, 0], [3, 0.466667, 0]], [0.000827394, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[1.00348, [3, -0.166667, 0], [3, 0.166667, 0]], [1.33309, [3, -0.166667, -0.0690278], [3, 0.0333333, 0.0138056]], [1.34689, [3, -0.0333333, -0.0138056], [3, 0.0333333, 0.0138056]], [1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, -0.083603], [3, 0.0333333, 0.083603]], [1.33309, [3, -0.0333333, -0.0298279], [3, 0.0666667, 0.0596558]], [1.43126, [3, -0.0666667, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.9362, [3, -0.166667, 0], [3, 0.133333, 0]], [1.24863, [3, -0.133333, 0], [3, 0.0333333, 0]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0493303], [3, 0.0333333, -0.0493303]], [1.24863, [3, -0.0333333, 0.0539458], [3, 0.0333333, -0.0539458]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0562086], [3, 0.166667, -0.281043]], [0.532861, [3, -0.166667, 0], [3, 0.133333, 0]], [1.33309, [3, -0.133333, -0.0552222], [3, 0.0333333, 0.0138056]], [1.34689, [3, -0.0333333, -0.0138056], [3, 0.0333333, 0.0138056]], [1.43126, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, -0.083603], [3, 0.0333333, 0.083603]], [1.33309, [3, -0.0333333, -0.0298279], [3, 0.0666667, 0.0596558]], [1.43126, [3, -0.0666667, 0], [3, 0.0333333, 0]], [1.31468, [3, -0.0333333, 0.0999658], [3, 0.0333333, -0.0999658]], [0.83147, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.16281, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.9362, [3, -0.166667, 0], [3, 0.133333, 0]], [1.24863, [3, -0.133333, 0], [3, 0.0333333, 0]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0493303], [3, 0.0333333, -0.0493303]], [1.24863, [3, -0.0333333, 0.0539458], [3, 0.0333333, -0.0539458]], [1.07529, [3, -0.0333333, 0.0429523], [3, 0.0333333, -0.0429523]], [0.990921, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.4005, [3, -0.0333333, -0.0922825], [3, 0.0333333, 0.0922825]], [1.54462, [3, -0.0333333, 0], [3, 0.0333333, 0]], [1.39897, [3, -0.0333333, 0.0562086], [3, 0.166667, -0.281043]], [0.532861, [3, -0.166667, 0], [3, 0.466667, 0]], [1.00797, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[1.38479, [3, -0.166667, 0], [3, 0.166667, 0]], [0.185572, [3, -0.166667, 0.20709], [3, 0.0333333, -0.041418]], [0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.174835, [3, -0.0333333, -0.0306808], [3, 0.0333333, 0.0306808]], [0.351244, [3, -0.0333333, -0.0452529], [3, 0.0333333, 0.0452529]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.185572, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.176367, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.351244, [3, -0.0333333, -0.0449975], [3, 0.0333333, 0.0449975]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0.0459114], [3, 0.166667, -0.229557]], [-0.380052, [3, -0.166667, 0], [3, 0.133333, 0]], [0.434165, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0449974], [3, 0.0333333, -0.0449974]], [0.16418, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0590701], [3, 0.0333333, -0.0590701]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.104068], [3, 0.0333333, 0.104068]], [0.434165, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0447418], [3, 0.0333333, -0.0447418]], [0.165714, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0593258], [3, 0.0333333, -0.0593258]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.108634], [3, 0.166667, 0.543171]], [1.76517, [3, -0.166667, 0], [3, 0.133333, 0]], [0.185572, [3, -0.133333, 0.165672], [3, 0.0333333, -0.041418]], [0.144154, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.174835, [3, -0.0333333, -0.0306808], [3, 0.0333333, 0.0306808]], [0.351244, [3, -0.0333333, -0.0452529], [3, 0.0333333, 0.0452529]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.185572, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.176367, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.351244, [3, -0.0333333, -0.0449975], [3, 0.0333333, 0.0449975]], [0.446352, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.036858, [3, -0.0333333, 0.0459114], [3, 0.166667, -0.229557]], [-0.380052, [3, -0.166667, 0], [3, 0.133333, 0]], [0.434165, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0449974], [3, 0.0333333, -0.0449974]], [0.16418, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0590701], [3, 0.0333333, -0.0590701]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.104068], [3, 0.0333333, 0.104068]], [0.434165, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.31758, [3, -0.0333333, 0.0447418], [3, 0.0333333, -0.0447418]], [0.165714, [3, -0.0333333, 0.0631497], [3, 0.0333333, -0.0631497]], [-0.061318, [3, -0.0333333, 0.0593258], [3, 0.0333333, -0.0593258]], [-0.190241, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.176453, [3, -0.0333333, -0.108634], [3, 0.166667, 0.543171]], [1.76517, [3, -0.166667, 0], [3, 0.466667, 0]], [1.38466, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[0.251513, [3, -0.166667, 0], [3, 0.166667, 0]], [0, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.178, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.996256, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0555556], [3, 0.166667, 0.277778]], [1, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1568, [3, -0.0333333, -0.0212], [3, 0.0333333, 0.0212]], [0.178, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0.000399992], [3, 0.0333333, -0.000399992]], [0, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.178, [3, -0.0666667, 0], [3, 0.0333333, 0]], [0.1616, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1672, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1668, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.996256, [3, -0.166667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1872, [3, -0.0333333, -0.000799999], [3, 0.0333333, 0.000799999]], [0.188, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.184, [3, -0.0333333, 0.00399999], [3, 0.0333333, -0.00399999]], [0, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.1908, [3, -0.0333333, -0.0555556], [3, 0.166667, 0.277778]], [1, [3, -0.166667, 0], [3, 0.466667, 0]], [0.25, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.45, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0767419, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.44797, [3, -0.233333, 0], [3, 0.3, 0]], [-0.104354, [3, -0.3, -0.0913514], [3, 0.133333, 0.0406006]], [-0.052114, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.406468, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.0767419, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.44797, [3, -0.233333, 0], [3, 0.3, 0]], [-0.104354, [3, -0.3, -0.0913514], [3, 0.133333, 0.0406006]], [-0.052114, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.406468, [3, -0.533333, 0.0422234], [3, 0.466667, -0.0369455]], [-0.443413, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.00288084, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.128814, [3, -0.166667, 0], [3, 0.233333, 0]], [-0.108872, [3, -0.233333, 0], [3, 0.3, 0]], [-0.208583, [3, -0.3, 0], [3, 0.133333, 0]], [-0.1335, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.276162, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.128814, [3, -0.133333, -0.0113955], [3, 0.233333, 0.0199421]], [-0.108872, [3, -0.233333, 0], [3, 0.3, 0]], [-0.208583, [3, -0.3, 0], [3, 0.133333, 0]], [-0.1335, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.276162, [3, -0.533333, 0], [3, 0.466667, 0]], [-0.000705859, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[-0.00420801, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.36505, [3, -0.166667, 0.00986112], [3, 0.233333, -0.0138056]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.133333, 0]], [-0.36505, [3, -0.133333, 0], [3, 0.233333, 0]], [-0.378855, [3, -0.233333, 0], [3, 0.3, 0]], [-0.371186, [3, -0.3, -0.0031859], [3, 0.133333, 0.00141596]], [-0.36505, [3, -0.133333, 0], [3, 0.533333, 0]], [-0.371186, [3, -0.533333, 0], [3, 0.466667, 0]], [0, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.5, 1, 1.7, 2.6, 3, 4.6, 5, 5.7, 6.6, 7, 8.6, 10])
	keys.append([[0.699999, [3, -0.166667, 0], [3, 0.166667, 0]], [0.653526, [3, -0.166667, 0], [3, 0.233333, 0]], [1.00481, [3, -0.233333, 0], [3, 0.3, 0]], [0.856014, [3, -0.3, 0.0630312], [3, 0.133333, -0.0280139]], [0.731677, [3, -0.133333, 0], [3, 0.533333, 0]], [1.30079, [3, -0.533333, 0], [3, 0.133333, 0]], [0.653526, [3, -0.133333, 0], [3, 0.233333, 0]], [1.00481, [3, -0.233333, 0], [3, 0.3, 0]], [0.856014, [3, -0.3, 0.0630312], [3, 0.133333, -0.0280139]], [0.731677, [3, -0.133333, 0], [3, 0.533333, 0]], [1.30079, [3, -0.533333, 0], [3, 0.466667, 0]], [0.691105, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[1.40843, [3, -0.166667, 0], [3, 0.166667, 0]], [0.624379, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0.0238621], [3, 0.0666667, -0.0477243]], [0.510865, [3, -0.0666667, 0.0698822], [3, 0.0333333, -0.0349411]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.705232, [3, -0.166667, 0.0203924], [3, 0.133333, -0.0163139]], [0.357381, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0380941], [3, 0.0333333, 0.0380941]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.578744, [3, -0.166667, 0], [3, 0.133333, 0]], [0.624379, [3, -0.133333, -0.35274], [3, 0.0333333, 0.0881851]], [0.744032, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.510865, [3, -0.0333333, 0.0723538], [3, 0.0333333, -0.0723538]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.624379, [3, -0.0333333, 0.0238621], [3, 0.0666667, -0.0477243]], [0.510865, [3, -0.0666667, 0.0698822], [3, 0.0333333, -0.0349411]], [0.309909, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.61671, [3, -0.0333333, -0.0692858], [3, 0.0333333, 0.0692858]], [0.725624, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.705232, [3, -0.166667, 0.0203924], [3, 0.133333, -0.0163139]], [0.357381, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, -0.0426919], [3, 0.0333333, 0.0426919]], [0.357381, [3, -0.0333333, -0.0380941], [3, 0.0333333, 0.0380941]], [0.510779, [3, -0.0333333, -0.0378384], [3, 0.0333333, 0.0378384]], [0.584411, [3, -0.0333333, -0.0158514], [3, 0.0333333, 0.0158514]], [0.605888, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.101229, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.282215, [3, -0.0333333, 0], [3, 0.166667, 0]], [-0.578744, [3, -0.166667, 0], [3, 0.466667, 0]], [1.40094, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[-0.297629, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.0337899, [3, -0.166667, -0.128257], [3, 0.0333333, 0.0256514]], [0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.0196863], [3, 0.0333333, -0.0196863]], [-0.0337899, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.124212, [3, -0.0666667, -0.0480653], [3, 0.0333333, 0.0240326]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.015521], [3, 0.166667, -0.0776052]], [-0.195051, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.159494, [3, -0.133333, -0.0143906], [3, 0.0333333, 0.00359766]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0247531], [3, 0.0333333, -0.0247531]], [-0.159494, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0205304], [3, 0.166667, -0.102652]], [-0.27879, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.0337899, [3, -0.133333, -0.118103], [3, 0.0333333, 0.0295257]], [0.164096, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.124212, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.0196863], [3, 0.0333333, -0.0196863]], [-0.0337899, [3, -0.0333333, 0], [3, 0.0666667, 0]], [0.124212, [3, -0.0666667, -0.0480653], [3, 0.0333333, 0.0240326]], [0.182504, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.0843279, [3, -0.0333333, 0.0217316], [3, 0.0333333, -0.0217316]], [0.052114, [3, -0.0333333, 0.015521], [3, 0.166667, -0.0776052]], [-0.195051, [3, -0.166667, 0], [3, 0.133333, 0]], [-0.159494, [3, -0.133333, -0.0143906], [3, 0.0333333, 0.00359766]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0247531], [3, 0.0333333, -0.0247531]], [-0.159494, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.141086, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.151824, [3, -0.0333333, 0], [3, 0.0333333, 0]], [-0.0889301, [3, -0.0333333, -0.0404302], [3, 0.0333333, 0.0404302]], [0.0907571, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.066004, [3, -0.0333333, 0.0205304], [3, 0.166667, -0.102652]], [-0.27879, [3, -0.166667, 0.00570368], [3, 0.466667, -0.0159703]], [-0.29476, [3, -0.466667, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.5, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.8, 1.9, 2, 2.1, 2.6, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.1, 4.6, 5, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.8, 5.9, 6, 6.1, 6.6, 7, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8, 8.1, 8.6, 10])
	keys.append([[-0.00104124, [3, -0.166667, 0], [3, 0.166667, 0]], [0.421808, [3, -0.166667, 0], [3, 0.0333333, 0]], [0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.46476, [3, -0.0333333, -0.0127834], [3, 0.0333333, 0.0127834]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.421808, [3, -0.0333333, -0.0214763], [3, 0.0666667, 0.0429525]], [0.46476, [3, -0.0666667, -0.0143175], [3, 0.0333333, 0.00715876]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.578728, [3, -0.166667, 0], [3, 0.133333, 0]], [0.573758, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.0646531], [3, 0.0333333, -0.0646531]], [0.573758, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.088914], [3, 0.166667, -0.44457]], [-0.638775, [3, -0.166667, 0], [3, 0.133333, 0]], [0.421808, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.409536, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.46476, [3, -0.0333333, -0.0127834], [3, 0.0333333, 0.0127834]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.421808, [3, -0.0333333, -0.0214763], [3, 0.0666667, 0.0429525]], [0.46476, [3, -0.0666667, -0.0143175], [3, 0.0333333, 0.00715876]], [0.486237, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.472429, [3, -0.0333333, 0.0138073], [3, 0.0333333, -0.0138073]], [0.131882, [3, -0.0333333, 0], [3, 0.166667, 0]], [0.578728, [3, -0.166667, 0], [3, 0.133333, 0]], [0.573758, [3, -0.133333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.0646531], [3, 0.0333333, -0.0646531]], [0.573758, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.615176, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.412688, [3, -0.0333333, 0.0700526], [3, 0.0333333, -0.0700526]], [0.194861, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.961676, [3, -0.0333333, 0], [3, 0.0333333, 0]], [0.763974, [3, -0.0333333, 0.088914], [3, 0.166667, -0.44457]], [-0.638775, [3, -0.166667, 0], [3, 0.466667, 0]], [0.000398923, [3, -0.466667, 0], [3, 0, 0]]])

	try:
		motion = ALProxy("ALMotion",robotIP,port)
		motion.angleInterpolationBezier(names, times, keys)
		posture = ALProxy("ALRobotPosture", robotIP, port)
		#posture.goToPosture("StandInit", 1.0)
	except BaseException, err:
	  print err
  
if __name__ == "__main__":
	robotIP = "127.0.0.1"
	port = 9559

	if len(sys.argv) <= 1:
		print "(robotIP default: 127.0.0.1)"
	elif len(sys.argv) <= 2:
		robotIP = sys.argv[1]
	else:
		port = int(sys.argv[2])
		robotIP = sys.argv[1]

	start = time.time()
	main(robotIP, port)
	end = time.time()
	print ("%.2f seconds elapsed" % (end-start))
