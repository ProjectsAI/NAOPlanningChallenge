# Choregraphe simplified export in Python.
from naoqi import ALProxy
import sys

def main(robotIP, port):
	
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.32, 1, 1.4, 2, 2.6, 3.2, 3.8, 4.4, 5])
	keys.append([-0.18719, -0.185656, 0.0291041, -0.185656, 0.00149202, -0.185656, 0.0812599, -0.185656, -0.354396])

	names.append("HeadYaw")
	times.append([0.32, 1, 1.4, 2, 2.6, 3.2, 3.8, 4.4, 5])
	keys.append([-0.00157595, -0.00157595, -0.00157595, 0.00609397, -4.19617e-05, 0.00609397, -4.19617e-05, 0.00609397, 0.431013])

	names.append("LAnklePitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([0.105804, -0.417291, -0.607505, -0.421891, -0.671934])

	names.append("LAnkleRoll")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([-0.0735901, -0.0858622, -0.125746, -0.0858622, -0.105804])

	names.append("LElbowRoll")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([-0.435615, -1.24863, -1.07529, -0.990921, -1.4005, -1.54462, -1.39897, -1.24863, -1.07529, -0.990921, -1.4005, -1.54462, -1.39897, -1.24863, -1.07529, -0.990921, -1.4005, -1.54462, -1.39897, -1.53856])

	names.append("LElbowYaw")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([-1.21344, -0.434165, -0.31758, -0.16418, 0.061318, 0.190241, -0.176453, -0.434165, -0.31758, -0.165714, 0.061318, 0.190241, -0.176453, -0.434165, -0.31758, -0.16418, 0.061318, 0.190241, -0.176453, -1.57086])

	names.append("LHand")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([0.3136, 0, 0.1872, 0.188, 0.184, 0, 0.1908, 0, 0.1872, 0.188, 0.184, 0, 0.1908, 0, 0.1872, 0.188, 0.184, 0, 0.1908, 1])

	names.append("LHipPitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([0.131966, -0.052114, -0.33437, -0.052114, -0.406468])

	names.append("LHipRoll")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([0.06447, 0.1335, 0.174919, 0.131966, 0.276162])

	names.append("LHipYawPitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([-0.170232, -0.36505, -0.378855, -0.36505, -0.371186])

	names.append("LKneePitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([-0.0874801, 0.731677, 1.13358, 0.730143, 1.30079])

	names.append("LShoulderPitch")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([1.4818, 0.357381, 0.510779, 0.584411, 0.605888, 0.101229, 0.282215, 0.357381, 0.510779, 0.584411, 0.605888, 0.101229, 0.282215, 0.357381, 0.510779, 0.584411, 0.605888, 0.101229, 0.282215, 0.095066])

	names.append("LShoulderRoll")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([0.0797259, 0.159494, 0.141086, 0.151824, 0.0889301, -0.0907571, -0.066004, 0.159494, 0.141086, 0.151824, 0.0889301, -0.0907571, -0.066004, 0.159494, 0.141086, 0.151824, 0.0889301, -0.0907571, -0.066004, 0.466294])

	names.append("LWristYaw")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([-0.213269, -0.573758, -0.615176, -0.412688, -0.194861, -0.961676, -0.763974, -0.573758, -0.615176, -0.412688, -0.194861, -0.961676, -0.763974, -0.573758, -0.615176, -0.411154, -0.194861, -0.961676, -0.763974, -1.79483])

	names.append("RAnklePitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([0.0951499, -0.31136, -0.355846, -0.31136, -0.443284])

	names.append("RAnkleRoll")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([0.122762, 0.124296, 0.144238, 0.124296, 0.314512])

	names.append("RElbowRoll")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([0.385075, 1.33309, 1.34689, 1.43126, 1.31468, 0.83147, 1.16281, 1.33309, 1.34689, 1.43126, 1.31468, 0.83147, 1.16281, 1.33309, 1.34689, 1.43126, 1.31468, 0.83147, 1.16281, 0.932714])

	names.append("RElbowYaw")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([1.23176, 0.185572, 0.144154, 0.174835, 0.351244, 0.446352, -0.036858, 0.185572, 0.144154, 0.176367, 0.351244, 0.446352, -0.036858, 0.185572, 0.144154, 0.174835, 0.351244, 0.446352, -0.036858, -0.389678])

	names.append("RHand")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([0.3112, 0, 0.1568, 0.178, 0.1616, 0.1672, 0.1668, 0, 0.1568, 0.178, 0.1616, 0.1672, 0.1668, 0, 0.1568, 0.178, 0.1616, 0.1672, 0.1668, 1])

	names.append("RHipPitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([0.139552, -0.0767419, -0.44797, -0.0798099, -0.104354])

	names.append("RHipRoll")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([-0.116542, -0.128814, -0.108872, -0.128814, -0.208583])

	names.append("RHipYawPitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([-0.170232, -0.36505, -0.378855, -0.36505, -0.371186])

	names.append("RKneePitch")
	times.append([0.32, 1, 2.32, 4.4, 5])
	keys.append([-0.0858622, 0.653526, 1.00481, 0.650458, 0.856014])

	names.append("RShoulderPitch")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([1.46808, 0.624379, 0.744032, 0.510865, 0.309909, 0.61671, 0.725624, 0.624379, 0.744032, 0.510865, 0.309909, 0.61671, 0.725624, 0.624379, 0.744032, 0.510865, 0.309909, 0.61671, 0.725624, 0.72409])

	names.append("RShoulderRoll")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([-0.067538, -0.0337899, 0.164096, 0.124212, 0.182504, 0.0843279, 0.052114, -0.0337899, 0.164096, 0.124212, 0.182504, 0.0843279, 0.052114, -0.0337899, 0.164096, 0.124212, 0.182504, 0.0843279, 0.052114, -0.193327])

	names.append("RWristYaw")
	times.append([0.32, 1, 1.2, 1.4, 1.6, 1.8, 2, 2.2, 2.4, 2.6, 2.8, 3, 3.2, 3.4, 3.6, 3.8, 4, 4.2, 4.4, 5])
	keys.append([-0.10282, 0.421808, 0.409536, 0.46476, 0.486237, 0.472429, 0.131882, 0.421808, 0.409536, 0.46476, 0.486237, 0.472429, 0.131882, 0.421808, 0.409536, 0.46476, 0.486237, 0.472429, 0.131882, 0.581345])

	try:
		motion = ALProxy("ALMotion", robotIP, port)
		motion.angleInterpolation(names, keys, times, True)
	except BaseException, err:
		print err

if __name__ == "__main__":
	robotIP = "127.0.0.1"
	port = 9559

	if len(sys.argv) <= 1:
		print "(robotIP default: 127.0.0.1)"
	elif len(sys.argv) <= 2:
		robotIP = sys.argv[1]
	else:
		port = int(sys.argv[2])
		robotIP = sys.argv[1]

	main(robotIP, port)
