# Choregraphe simplified export in Python.
from naoqi import ALProxy
import sys

def main(robotIP, port):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 8.33333])
	keys.append([0.00302603, 0.00302603, 0.340507, -0.417291, -0.664264, 0.0459781, 0.113474, 0.0996681, 0.102736, -0.417291, -0.664264, 0.0459781, 0.113474, 0.0996681, 0.102736, -0.00617796])

	names.append("HeadYaw")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 8.33333])
	keys.append([-1.10145, 1.4097, -0.00924597, -0.254685, 0.506179, 0.627364, -0.22554, 0.645772, -0.217869, -0.254685, 0.506179, 0.627364, -0.22554, 0.645772, -0.217869, 0.00456004])

	names.append("LAnklePitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([-0.359129, -0.762571, -0.777911, -0.580025, -0.58923, -0.590764, -0.580025, -0.58923, -0.590764, -0.116757])

	names.append("LAnkleRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([-0.282235, -0.0598056, -0.0552035, -0.139574, -0.133438, -0.134972, -0.139574, -0.133438, -0.134972, 0.0138264])

	names.append("LElbowRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([-0.748551, -0.901949, -1.48947, -1.05688, -1.56157, -1.08603, -1.56464, -0.866668, -1.56464, -1.05688, -1.56157, -1.08603, -1.56464, -0.866668, -1.56464, -1.02314, -0.299088, -0.315962])

	names.append("LElbowYaw")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([0.89428, -0.681137, -0.52467, 0.383458, -0.760906, 0.0797261, -0.83914, 0.329768, -0.740964, 0.383458, -0.760906, 0.0797261, -0.83914, 0.329768, -0.740964, -0.339056, -0.932714, -0.7471])

	names.append("LHand")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([0.920023, 0.920023, 0.921478, 0.921478, 0.921478, 0.921478, 0.921478, 0.921478, 0.921478, 0.920387])

	names.append("LHipPitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([0.232947, -0.224186, -0.21038, -0.34077, -0.325429, -0.323895, -0.34077, -0.325429, -0.323895, 0.0764786])

	names.append("LHipRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([0.423192, 0.31121, 0.294336, -0.050814, -0.0661541, -0.0661541, -0.050814, -0.0661541, -0.0661541, -0.0492801])

	names.append("LHipYawPitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.2, 4.8, 5.2, 5.73333, 6.26667, 8.33333])
	keys.append([-0.113559, -0.236279, -0.230144, -0.32065, -0.311445, -0.311445, -0.302242, -0.32065, -0.311445, -0.311445, -0.302242, 0.0275685])

	names.append("LKneePitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([0.14541, 1.11643, 1.13331, 1.01212, 1.03513, 1.02899, 1.01212, 1.03513, 1.02899, 0.0871181])

	names.append("LShoulderPitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([0.653443, -0.934249, 0.489305, 0.589014, 0.259204, 0.714801, 0.245399, 0.656511, 0.274544, 0.589014, 0.259204, 0.714801, 0.245399, 0.656511, 0.274544, 0.720938, 0.437147, 1.56004])

	names.append("LShoulderRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([1.32687, 1.39743, 0.010696, 0.013764, 0, 0, 0.013764, 0, 0, 0.013764, 0, 0, 0.013764, 0, 0, 0.061318, 1.13052, 0.302157])

	names.append("LWristYaw")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([-1.02475, -1.02475, -1.02015, -1.02629, -1.02015, -1.02629, -1.02629, -1.02015, -1.02629, 1.04461])

	names.append("RAnklePitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.2, 4.8, 5.2, 5.73333, 6.26667, 8.33333])
	keys.append([-0.102805, -0.210185, -0.220924, -0.405004, -0.412673, -0.412673, -0.421878, -0.405004, -0.412673, -0.412673, -0.421878, -0.102805])

	names.append("RAnkleRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.2, 4.8, 5.2, 5.73333, 6.26667, 8.33333])
	keys.append([-0.00456227, -0.105806, -0.10734, -0.0229703, -0.0245042, -0.0260382, -0.0275722, -0.0229703, -0.0245042, -0.0260382, -0.0275722, -0.00456227])

	names.append("RElbowRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([0.727158, 1.10452, 0.176453, 0.170316, 0.174919, 0.174919, 0.173384, 0.170316, 0.173384, 0.170316, 0.174919, 0.174919, 0.173384, 0.170316, 0.173384, 0.280764, 1.34843, 0.273093])

	names.append("RElbowYaw")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([0.946436, -0.515466, 0.728609, 0.722472, 0.730143, 0.731675, 0.730143, 0.71787, 0.722472, 0.722472, 0.730143, 0.731675, 0.730143, 0.71787, 0.722472, -1.22878, -0.0537319, 0.768491])

	names.append("RHand")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([0.920387, 0.920387, 0.922933, 0.922933, 0.925478, 0.922933, 0.922933, 0.925478, 0.922933, 0.971296])

	names.append("RHipPitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.2, 4.8, 5.2, 5.73333, 6.26667, 8.33333])
	keys.append([0.041361, -0.24243, -0.237827, -0.856028, -0.848359, -0.852962, -0.851427, -0.856028, -0.848359, -0.852962, -0.851427, 0.041361])

	names.append("RHipRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.2, 4.8, 5.2, 5.73333, 6.26667, 8.33333])
	keys.append([0.0153604, 0.210178, 0.21478, -0.0889516, -0.0843497, -0.0843497, -0.0797476, -0.0889516, -0.0843497, -0.0843497, -0.0797476, 0.0153604])

	names.append("RKneePitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.2, 4.8, 5.2, 5.73333, 6.26667, 8.33333])
	keys.append([0.105432, 0.619321, 0.640798, 1.26974, 1.29121, 1.28968, 1.31576, 1.26974, 1.29121, 1.28968, 1.31576, 0.105432])

	names.append("RShoulderPitch")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([-0.970981, 0.782382, -0.877407, -0.863599, -0.81758, -0.814512, -0.819114, -0.811444, -0.81758, -0.863599, -0.81758, -0.814512, -0.819114, -0.811444, -0.81758, -0.085862, 0.406552, 1.55705])

	names.append("RShoulderRoll")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.4, 3.66667, 3.93333, 4.2, 4.8, 5.2, 5.46667, 5.73333, 6, 6.26667, 7.26667, 7.66667, 8.33333])
	keys.append([-1.40519, -1.30701, -1.00174, -1.01248, -1.02629, -1.02015, -1.03856, -1.05083, -1.06004, -1.01248, -1.02629, -1.02015, -1.03856, -1.05083, -1.06004, -1.25179, -0.00617796, -0.296104])

	names.append("RWristYaw")
	times.append([0.866667, 1.53333, 2.13333, 2.73333, 3.13333, 3.66667, 4.8, 5.2, 5.73333, 8.33333])
	keys.append([0.977116, 0.974047, 0.964844, 0.966378, 0.98632, 0.966378, 0.966378, 0.98632, 0.966378, 1.49254])

	try:
		motion = ALProxy("ALMotion", robotIP, port)
		motion.angleInterpolation(names, keys, times, True)
	except BaseException, err:
		print err
	try:
		postureProxy = ALProxy("ALRobotPosture", robotIP, port)
		postureProxy.goToPosture("Stand", 0.5)
	except  Exception, e:
		print "Could not create proxy to ALRobotPosture"

if __name__ == "__main__":
	robotIP = "127.0.0.1"
	port = 9559

	if len(sys.argv) <= 1:
		print "(robotIP default: 127.0.0.1)"
	elif len(sys.argv) <= 2:
		robotIP = sys.argv[1]
	else:
		port = int(sys.argv[2])
		robotIP = sys.argv[1]

	main(robotIP, port)
