# Choregraphe bezier export in Python.
import sys
import time

from naoqi import ALProxy


def main(robotIP, port):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append(
        [[-0.00423419, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.242601, [3, -0.0666667, 0], [3, 0.106667, 0]],
         [0.375246, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.242601, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.375246, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.178024, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.178024, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.178024, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.178024, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.178024, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.0851167, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.0851167, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.0851167, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0851167, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[-0.122946, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.122946, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [-0.122946, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.122946, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[-0.409747, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.418881, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [-0.418881, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.418881, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[-1.18463, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-1.19748, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [-1.19748, [3, -0.106667, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-1.19748, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.295054, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.295054, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.295054, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.122946, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.122946, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.122946, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.0919783, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.0919783, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.0919783, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0919783, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[-0.167197, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.167197, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [-0.167197, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append(
        [[-0.0851167, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.0851167, [3, -0.0666667, 0], [3, 0.106667, 0]],
         [-0.0851167, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0851167, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0851167, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[1.47132, [3, -0.0133333, 0], [3, 0.0666667, 0]],
                 [1.44152, [3, -0.0666667, 0.00556], [3, 0.106667, -0.008896]],
                 [1.42795, [3, -0.106667, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.181362, [3, -0.0133333, 0], [3, 0.0666667, 0]],
                 [0.216545, [3, -0.0666667, -0.00755034], [3, 0.106667, 0.0120805]],
                 [0.240255, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.240255, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.0990028, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.0962523, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.0962523, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append(
        [[-0.00438648, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.251327, [3, -0.0666667, 0], [3, 0.106667, 0]],
         [0.0950882, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.251327, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [0.0950882, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.00149262, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.0855211, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.0819106, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0855211, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0819106, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.409747, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.418881, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.418881, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.418881, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.418881, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[1.18463, [3, -0.0133333, 0], [3, 0.0666667, 0]], [1.19748, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [1.19748, [3, -0.106667, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.19748, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.19748, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.295054, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.295054, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.295054, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.295054, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.295054, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.122946, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.122946, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.122946, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.122946, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.122946, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append(
        [[-0.0919783, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.0919783, [3, -0.0666667, 0], [3, 0.106667, 0]],
         [-0.0919783, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0919783, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0919783, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[-0.167197, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.167197, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [-0.167197, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.167197, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.167197, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append(
        [[-0.0715585, [3, -0.0133333, 0], [3, 0.0666667, 0]], [-0.0715585, [3, -0.0666667, 0], [3, 0.106667, 0]],
         [-0.0715585, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.0715585, [3, -0.0933333, 0], [3, 0.0933333, 0]],
         [-0.0715585, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[1.47132, [3, -0.0133333, 0], [3, 0.0666667, 0]],
                 [1.44152, [3, -0.0666667, 0.00556], [3, 0.106667, -0.008896]],
                 [1.42795, [3, -0.106667, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0.0933333, 0]], [1.44152, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [1.42795, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[-0.181362, [3, -0.0133333, 0], [3, 0.0666667, 0]],
                 [-0.216545, [3, -0.0666667, 0.00755034], [3, 0.106667, -0.0120805]],
                 [-0.240255, [3, -0.106667, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0.0933333, 0]], [-0.216545, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [-0.240255, [3, -0.0933333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.04, 0.24, 0.56, 0.84, 1.12, 1.4, 1.68, 1.96, 2.24, 2.52, 2.8, 3.08, 3.36, 3.64, 3.92, 4.2, 4.48])
    keys.append([[0.0990028, [3, -0.0133333, 0], [3, 0.0666667, 0]], [0.0962523, [3, -0.0666667, 0], [3, 0.106667, 0]],
                 [0.0962523, [3, -0.106667, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]], [0.0962523, [3, -0.0933333, 0], [3, 0.0933333, 0]],
                 [0.0962523, [3, -0.0933333, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", robotIP, port)
        #  motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


if __name__ == "__main__":
    robotIP = "127.0.0.1"
    port = 9559

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    start = time.time()
    main(robotIP, port)
    end = time.time()
    duration = end-start
    print ("%.2f seconds elapsed" % duration)
