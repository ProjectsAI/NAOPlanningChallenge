# Choregraphe bezier export in Python.
import sys
import time

from naoqi import ALProxy
def main(robotIP, port):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.0925025, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.431644, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0925025, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.431644, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0925025, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.431644, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.168961, [3, -0.12, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.856957, [3, -0.0666667, 0], [3, 0.266667, 0]], [1.08385, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.856957, [3, -0.266667, 0], [3, 0.266667, 0]], [1.08385, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.856957, [3, -0.266667, 0], [3, 0.266667, 0]], [1.08385, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.00693271, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.0861187, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.0849968, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0861187, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0849968, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0861187, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0849968, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.0874372, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.127407, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.127111, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.127407, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.127111, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.127407, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.127111, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.127426, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-1.17461, [3, -0.0666667, 0], [3, 0.266667, 0]], [-1.1719, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.17461, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.1719, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.17461, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.1719, [3, -0.266667, -0.00271057], [3, 0.12, 0.00121975]], [-0.411205, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.441568, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.444621, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.441568, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.444621, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.441568, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.444621, [3, -0.266667, 0.00305258], [3, 0.12, -0.00137366]], [-1.2037, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.96, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.995542, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.96, [3, -0.266667, 0], [3, 0.266667, 0]], [0.995542, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.96, [3, -0.266667, 0], [3, 0.266667, 0]], [0.995542, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.291927, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.129161, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.127669, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.129161, [3, -0.266667, 0], [3, 0.266667, 0]], [0.127669, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.129161, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.127669, [3, -0.266667, 0.00058874], [3, 0.12, -0.000264933]], [0.1266, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.104019, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.107682, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.104019, [3, -0.266667, 0], [3, 0.266667, 0]], [0.107682, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.104019, [3, -0.266667, 0], [3, 0.266667, 0]], [0.107682, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.0991617, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.166289, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.159926, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.166289, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.159926, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.166289, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.159926, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.178846, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.0830473, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.0810376, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.0830473, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0810376, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.0830473, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0810376, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.0861571, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[2.08567, [3, -0.0666667, 0], [3, 0.266667, 0]], [-1.11606, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [2.08567, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.11606, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [2.08567, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.11606, [3, -0.266667, 0], [3, 0.12, 0]],
                 [1.46996, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[1.32645, [3, -0.0666667, 0], [3, 0.266667, 0]], [1.32623, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.32645, [3, -0.266667, 0], [3, 0.266667, 0]], [1.32623, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.32645, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.32623, [3, -0.266667, 0.00022517], [3, 0.12, -0.000101327]], [0.182895, [3, -0.12, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.0942478, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.0909542, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0942478, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0909542, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0942478, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0909542, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.0951824, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.0930971, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.0939924, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0930971, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0939924, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0930971, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0939924, [3, -0.266667, -0.000353525], [3, 0.12, 0.000159086]],
                 [0.0946349, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.128911, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.128597, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.128911, [3, -0.266667, 0], [3, 0.266667, 0]], [0.128597, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.128911, [3, -0.266667, 0], [3, 0.266667, 0]], [0.128597, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.139628, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[1.46259, [3, -0.0666667, 0], [3, 0.266667, 0]], [1.46006, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.46259, [3, -0.266667, 0], [3, 0.266667, 0]], [1.46006, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.46259, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.46006, [3, -0.266667, 0.00252907], [3, 0.12, -0.00113808]], [0.410672, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.357792, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.357927, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.357792, [3, -0.266667, 0], [3, 0.266667, 0]], [0.357927, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.357792, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.357927, [3, -0.266667, -0.00013439], [3, 0.12, 6.04754e-05]], [1.20341, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[1, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.00227183, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00227183, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1, [3, -0.266667, 0], [3, 0.266667, 0]], [0.00227183, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.296817, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.129182, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.127726, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.129182, [3, -0.266667, 0], [3, 0.266667, 0]], [0.127726, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.129182, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.127726, [3, -0.266667, 0.000593518], [3, 0.12, -0.000267083]], [0.1266, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.100805, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.102238, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.100805, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.102238, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.100805, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.102238, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.0991405, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.166289, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.159926, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.166289, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.159926, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.166289, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.159926, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.178846, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-0.08301, [3, -0.0666667, 0], [3, 0.266667, 0]], [-0.0809894, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.08301, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0809894, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.08301, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0809894, [3, -0.266667, 0], [3, 0.12, 0]],
                 [-0.0890101, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-1.20951, [3, -0.0666667, 0], [3, 0.266667, 0]], [1.7129, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.20951, [3, -0.266667, 0], [3, 0.266667, 0]], [1.7129, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.20951, [3, -0.266667, 0], [3, 0.266667, 0]], [1.7129, [3, -0.266667, 0], [3, 0.12, 0]],
                 [1.4663, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[-1.32645, [3, -0.0666667, 0], [3, 0.266667, 0]], [-1.3234, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.32645, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.3234, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.32645, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.3234, [3, -0.266667, -0.00305438], [3, 0.12, 0.00137447]], [-0.179703, [3, -0.12, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.2, 1, 1.8, 2.6, 3.4, 4.2, 4.56])
    keys.append([[0.0924459, [3, -0.0666667, 0], [3, 0.266667, 0]], [0.0924459, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0924459, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0924459, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0924459, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0924459, [3, -0.266667, 0], [3, 0.12, 0]],
                 [0.100998, [3, -0.12, 0], [3, 0, 0]]])



    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", robotIP, port)
        #  motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


if __name__ == "__main__":
    robotIP = "127.0.0.1"
    port = 9559

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    start = time.time()
    main(robotIP, port)
    end = time.time()
    duration = end - start
    print ("%.2f seconds elapsed" % duration)
    