# Choregraphe bezier export in Python.

import sys
import time

from naoqi import ALProxy


def main(robotIP, port):
        # Choregraphe bezier export in Python.
        from naoqi import ALProxy
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[-0.00176254, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.628319, [3, -0.52, 0], [3, 0.533333, 0]],
                     [-0.00176254, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [-0.628319, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [-0.00176254, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.628319, [3, -0.533333, 0], [3, 0.4, 0]],
                     [-0.00176254, [3, -0.4, 0], [3, 0.04, 0]], [-0.00974524, [3, -0.04, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[-0.00913146, [3, -0.0133333, 0], [3, 0.52, 0]], [0.598648, [3, -0.52, 0], [3, 0.533333, 0]],
                     [-0.00913146, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [0.598648, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [-0.00913146, [3, -0.533333, 0], [3, 0.533333, 0]], [0.598648, [3, -0.533333, 0], [3, 0.4, 0]],
                     [-0.00913146, [3, -0.4, 0], [3, 0.04, 0]], [-0.00138798, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LAnklePitch")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[-0.346837, [3, -0.0133333, 0], [3, 1.05333, 0]], [-0.346837, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [-0.346837, [3, -1.06667, 0], [3, 0.933333, 0]], [-0.346837, [3, -0.933333, 0], [3, 0.04, 0]],
                     [-0.340085, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append(
                [[5.79355e-05, [3, -0.0133333, 0], [3, 1.05333, 0]], [5.79355e-05, [3, -1.05333, 0], [3, 1.06667, 0]],
                 [5.79355e-05, [3, -1.06667, 0], [3, 0.933333, 0]], [5.79355e-05, [3, -0.933333, 0], [3, 0.04, 0]],
                 [-0.00852073, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[-1.52116, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.0349066, [3, -0.52, 0], [3, 0.533333, 0]],
                     [-1.52116, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.0349066, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [-1.52116, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.0349066, [3, -0.533333, 0], [3, 0.4, 0]],
                     [-1.52116, [3, -0.4, 0], [3, 0.04, 0]], [-1.01287, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[-0.80629, [3, -0.0133333, 0], [3, 1.05333, 0]], [-0.80629, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [-0.80629, [3, -1.06667, 0], [3, 0.933333, 0]], [-0.80629, [3, -0.933333, 0], [3, 0.04, 0]],
                     [-1.38903, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[0.18, [3, -0.0133333, 0], [3, 0.52, 0]], [1, [3, -0.52, 0], [3, 0.533333, 0]],
                     [0.18, [3, -0.533333, 0], [3, 0.533333, 0]], [1, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [0.18, [3, -0.533333, 0], [3, 0.533333, 0]], [1, [3, -0.533333, 0], [3, 0.4, 0]],
                     [0.18, [3, -0.4, 0], [3, 0.04, 0]], [0.25, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[-0.451368, [3, -0.0133333, 0], [3, 1.05333, 0]], [-0.451368, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [-0.451368, [3, -1.06667, 0], [3, 0.933333, 0]], [-0.451368, [3, -0.933333, 0], [3, 0.04, 0]],
                     [-0.457512, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[0.00540663, [3, -0.0133333, 0], [3, 0.52, 0]], [0.155234, [3, -0.52, 0], [3, 0.533333, 0]],
                     [0.00540663, [3, -0.533333, 0], [3, 0.533333, 0]], [0.155234, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [0.00540663, [3, -0.533333, 0], [3, 0.533333, 0]], [0.155234, [3, -0.533333, 0], [3, 0.4, 0]],
                     [0.00540663, [3, -0.4, 0.0456184], [3, 0.04, -0.00456184]],
                     [0.000844786, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.0101349, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.0101349, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.0101349, [3, -1.06667, 0], [3, 0.933333, 0]], [0.0101349, [3, -0.933333, 0], [3, 0.04, 0]],
                     [0.0029097, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.698678, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.698678, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.698678, [3, -1.06667, 0], [3, 0.933333, 0]], [0.698678, [3, -0.933333, 0], [3, 0.04, 0]],
                     [0.706703, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[2.05429, [3, -0.0133333, 0], [3, 0.52, 0]], [-1.63188, [3, -0.52, 0], [3, 0.533333, 0]],
                     [2.05429, [3, -0.533333, 0], [3, 0.533333, 0]], [-1.63188, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [2.05429, [3, -0.533333, 0], [3, 0.533333, 0]], [-1.63188, [3, -0.533333, 0], [3, 0.4, 0]],
                     [2.05429, [3, -0.4, 0], [3, 0.04, 0]], [1.40311, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[0.668559, [3, -0.0133333, 0], [3, 0.52, 0]], [0.668461, [3, -0.52, 0], [3, 0.533333, 0]],
                     [0.668559, [3, -0.533333, 0], [3, 0.533333, 0]], [0.668461, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [0.668559, [3, -0.533333, 0], [3, 0.533333, 0]], [0.668461, [3, -0.533333, 0], [3, 0.4, 0]],
                     [0.668559, [3, -0.4, 0], [3, 0.04, 0]], [0.303275, [3, -0.04, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.00392214, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.00392214, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.00392214, [3, -1.06667, 0], [3, 0.933333, 0]], [0.00392214, [3, -0.933333, 0], [3, 0.04, 0]],
                     [-0.00437951, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[-0.350143, [3, -0.0133333, 0], [3, 0.52, 0]], [0.808087, [3, -0.52, 0], [3, 0.533333, 0]],
                     [-0.350143, [3, -0.533333, 0], [3, 0.533333, 0]], [0.808087, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [-0.350143, [3, -0.533333, 0], [3, 0.533333, 0]], [0.808087, [3, -0.533333, 0], [3, 0.4, 0]],
                     [-0.350143, [3, -0.4, 0], [3, 0.04, 0]], [-0.349188, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append(
                [[-0.00409936, [3, -0.0133333, 0], [3, 1.05333, 0]], [-0.00409936, [3, -1.05333, 0], [3, 1.06667, 0]],
                 [-0.00409936, [3, -1.06667, 0], [3, 0.933333, 0]], [-0.00409936, [3, -0.933333, 0], [3, 0.04, 0]],
                 [-0.00181464, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[1.52116, [3, -0.0133333, 0], [3, 1.05333, 0]], [1.52116, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [1.52116, [3, -1.06667, 0], [3, 0.933333, 0]], [1.52116, [3, -0.933333, 0], [3, 0.04, 0]],
                     [1.01287, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.806288, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.806288, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.806288, [3, -1.06667, 0], [3, 0.933333, 0]], [0.806288, [3, -0.933333, 0], [3, 0.04, 0]],
                     [1.38903, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.18, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.18, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.18, [3, -1.06667, 0], [3, 0.933333, 0]], [0.18, [3, -0.933333, 0], [3, 0.04, 0]],
                     [0.25, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[-0.45015, [3, -0.0133333, 0], [3, 0.52, 0]], [-1.53589, [3, -0.52, 0], [3, 0.533333, 0]],
                     [-0.45015, [3, -0.533333, 0], [3, 0.533333, 0]], [-1.53589, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [-0.45015, [3, -0.533333, 0], [3, 0.533333, 0]], [-1.53589, [3, -0.533333, 0], [3, 0.4, 0]],
                     [-0.45015, [3, -0.4, 0], [3, 0.04, 0]], [-0.451045, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[-0.0021584, [3, -0.0133333, 0], [3, 1.05333, 0]], [-0.0021584, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [-0.0021584, [3, -1.06667, 0], [3, 0.933333, 0]], [-0.0021584, [3, -0.933333, 0], [3, 0.04, 0]],
                     [-0.00972752, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RHipYawPitch")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.0101349, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.0101349, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.0101349, [3, -1.06667, 0], [3, 0.933333, 0]], [0.0101349, [3, -0.933333, 0], [3, 0.04, 0]],
                     [0.0029097, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.04, 1.6, 3.2, 4.8, 6.4, 8, 9.2, 9.32])
        keys.append([[0.699795, [3, -0.0133333, 0], [3, 0.52, 0]], [-0.0925025, [3, -0.52, 0], [3, 0.533333, 0]],
                     [0.699795, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.0925025, [3, -0.533333, 0], [3, 0.533333, 0]],
                     [0.699795, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.0925025, [3, -0.533333, 0], [3, 0.4, 0]],
                     [0.699795, [3, -0.4, 0], [3, 0.04, 0]], [0.699795, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[2.0543, [3, -0.0133333, 0], [3, 1.05333, 0]], [2.0543, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [2.0543, [3, -1.06667, 0], [3, 0.933333, 0]], [2.0543, [3, -0.933333, 0], [3, 0.04, 0]],
                     [1.40311, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[-0.668562, [3, -0.0133333, 0], [3, 1.05333, 0]], [-0.668562, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [-0.668562, [3, -1.06667, 0], [3, 0.933333, 0]], [-0.668562, [3, -0.933333, 0], [3, 0.04, 0]],
                     [-0.303274, [3, -0.04, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.04, 3.2, 6.4, 9.2, 9.32])
        keys.append([[0.00252713, [3, -0.0133333, 0], [3, 1.05333, 0]], [0.00252713, [3, -1.05333, 0], [3, 1.06667, 0]],
                     [0.00252713, [3, -1.06667, 0], [3, 0.933333, 0]], [0.00252713, [3, -0.933333, 0], [3, 0.04, 0]],
                     [0.000482855, [3, -0.04, 0], [3, 0, 0]]])


        try:
            # uncomment the following line and modify the IP if you use this script outside Choregraphe.
            motion = ALProxy("ALMotion", robotIP, port)
            #  motion = ALProxy("ALMotion")
            motion.angleInterpolationBezier(names, times, keys)
        except BaseException, err:
            print err


if __name__ == "__main__":
    robotIP = "127.0.0.1"
    port = 9559

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    start = time.time()
    main(robotIP, port)
    end = time.time()
    duration = end - start
    print ("%.2f seconds elapsed" % duration)
