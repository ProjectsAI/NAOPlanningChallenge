# Choregraphe bezier export in Python.
import sys
import time

from naoqi import ALProxy


def main(robotIP, port):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.174166, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.174166, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.174166, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.174166, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.174166, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.174166, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.174166, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.174166, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.165703, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.986111, [3, -0.0133333, 0], [3, 0.253333, 0]],
                 [0.113446, [3, -0.253333, 0.309788], [3, 0.266667, -0.326093]],
                 [-0.921534, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.113446, [3, -0.266667, -0.317941], [3, 0.266667, 0.317941]],
                 [0.986111, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.113446, [3, -0.266667, 0.317941], [3, 0.266667, -0.317941]],
                 [-0.921534, [3, -0.266667, 0], [3, 0.266667, 0]], [0.113446, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.00628422, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.532325, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0331613, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.532325, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0331613, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.532325, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0331613, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.532325, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.0331613, [3, -0.266667, -0.111757], [3, 0.226667, 0.0949934]],
                 [0.0879258, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.124358, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.124358, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.124358, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.124358, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.124358, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.124358, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.124358, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.124358, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.123952, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-1.50451, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.46472, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-1.50341, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.46472, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.50451, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.46472, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.50341, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.46472, [3, -0.266667, -0.0386921], [3, 0.226667, 0.0328883]],
                 [-0.410395, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.195894, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.195894, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.195894, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.195894, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.195894, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.195894, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.195894, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.195894, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-1.18669, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.63, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.63, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.63, [3, -0.266667, 0], [3, 0.266667, 0]], [0.63, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.63, [3, -0.266667, 0], [3, 0.266667, 0]], [0.63, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.63, [3, -0.266667, 0], [3, 0.266667, 0]], [0.63, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.300119, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.469494, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.221657, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.469494, [3, -0.266667, 0], [3, 0.266667, 0]], [0.221657, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.469494, [3, -0.266667, 0], [3, 0.266667, 0]], [0.221657, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.469494, [3, -0.266667, 0], [3, 0.266667, 0]], [0.221657, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.135077, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.0977384, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.0977384, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]], [0.0977384, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.0958153, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.167197, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.167197, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.167197, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.163908, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[1.13272, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0879093, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [1.13272, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0879093, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.13272, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0879093, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.13272, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0879093, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.0836375, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-1.41438, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.414, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-1.42471, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.414, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.41438, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.414, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.42471, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.414, [3, -0.266667, -0.0107023], [3, 0.226667, 0.00909697]],
                 [1.47079, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.54004, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.575809, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.539607, [3, -0.266667, 0], [3, 0.266667, 0]], [0.575809, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.54004, [3, -0.266667, 0], [3, 0.266667, 0]], [0.575809, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.539607, [3, -0.266667, 0], [3, 0.266667, 0]], [0.575809, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.181014, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-1.53682, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.53682, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-1.53682, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.53682, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.53682, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.53682, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.53682, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.53682, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.0967881, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.532325, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0331613, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.532325, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0331613, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.532325, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0331613, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.532325, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.0331613, [3, -0.266667, -0.111757], [3, 0.226667, 0.0949934]],
                 [0.0879258, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.121568, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.121568, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.121568, [3, -0.266667, 0], [3, 0.266667, 0]], [0.121568, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.121568, [3, -0.266667, 0], [3, 0.266667, 0]], [0.121568, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.121568, [3, -0.266667, 0], [3, 0.266667, 0]], [0.121568, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.121171, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[1.49408, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.46734, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [1.51033, [3, -0.266667, 0], [3, 0.266667, 0]], [1.46734, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.49408, [3, -0.266667, 0], [3, 0.266667, 0]], [1.46734, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.51033, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.46734, [3, -0.266667, 0.0429891], [3, 0.226667, -0.0365408]],
                 [0.414143, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.195894, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.195894, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.195894, [3, -0.266667, 0], [3, 0.266667, 0]], [0.195894, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.195894, [3, -0.266667, 0], [3, 0.266667, 0]], [0.195894, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.195894, [3, -0.266667, 0], [3, 0.266667, 0]], [0.195894, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [1.18659, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[0.63, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.63, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [0.63, [3, -0.266667, 0], [3, 0.266667, 0]], [0.63, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.63, [3, -0.266667, 0], [3, 0.266667, 0]], [0.63, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [0.63, [3, -0.266667, 0], [3, 0.266667, 0]], [0.63, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.300119, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.469494, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.221657, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.469494, [3, -0.266667, 0], [3, 0.266667, 0]], [0.221657, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.469494, [3, -0.266667, 0], [3, 0.266667, 0]], [0.221657, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.469494, [3, -0.266667, 0], [3, 0.266667, 0]], [0.221657, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.135077, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.0977384, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0977384, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.0977384, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0977384, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.0958153, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.167197, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.167197, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.167197, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.167197, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.163908, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[1.13272, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.0879093, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [1.13272, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0879093, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.13272, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0879093, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.13272, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.0879093, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.0836375, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-1.42461, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.42624, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-1.41548, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.42624, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.42461, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.42624, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-1.41548, [3, -0.266667, 0], [3, 0.266667, 0]], [-1.42624, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [1.4708, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[-0.54004, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.570508, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [-0.537256, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.570508, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.54004, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.570508, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [-0.537256, [3, -0.266667, 0], [3, 0.266667, 0]], [-0.570508, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [-0.181043, [3, -0.226667, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.04, 0.8, 1.6, 2.4, 3.2, 4, 4.8, 5.6, 6.28])
    keys.append([[1.53682, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.53682, [3, -0.253333, 0], [3, 0.266667, 0]],
                 [1.53682, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53682, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.53682, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53682, [3, -0.266667, 0], [3, 0.266667, 0]],
                 [1.53682, [3, -0.266667, 0], [3, 0.266667, 0]], [1.53682, [3, -0.266667, 0], [3, 0.226667, 0]],
                 [0.102819, [3, -0.226667, 0], [3, 0, 0]]])



    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", robotIP, port)
        #  motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


if __name__ == "__main__":
    robotIP = "127.0.0.1"
    port = 9559

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    start = time.time()
    main(robotIP, port)
    end = time.time()
    duration = end - start
    print ("%.2f seconds elapsed" % duration)
