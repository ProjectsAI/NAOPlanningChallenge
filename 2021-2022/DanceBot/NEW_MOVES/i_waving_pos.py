# Choregraphe bezier export in Python.

import sys
import time

from naoqi import ALProxy


def main(robotIP, port):
    names = list()
    times = list()
    keys = list()

    names.append("HeadPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.169585, [3, -0.173333, 0], [3, 0.253333, 0]], [0.169585, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.169585, [3, -0.293333, 0], [3, 0.253333, 0]], [0.169585, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.169585, [3, -0.333333, 0], [3, 0.253333, 0]], [0.169585, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("HeadYaw")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.141738, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.141738, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.141738, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.141738, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.141738, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.141738, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LAnklePitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.813424, [3, -0.173333, 0], [3, 0.253333, 0]], [0.813424, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.813425, [3, -0.293333, 0], [3, 0.253333, 0]], [0.813425, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.813425, [3, -0.333333, 0], [3, 0.253333, 0]], [0.813425, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LAnkleRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.0017759, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.0017759, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.00177591, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.00177591, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.00177591, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.00177591, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LElbowRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.482875, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.487182, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.482875, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.487182, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.482875, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.487182, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LElbowYaw")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.457932, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.45741, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.457933, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.457411, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.457933, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.457411, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LHand")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.3, [3, -0.173333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.3, [3, -0.293333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.3, [3, -0.333333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LHipPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-1.53098, [3, -0.173333, 0], [3, 0.253333, 0]], [-1.53098, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-1.53098, [3, -0.293333, 0], [3, 0.253333, 0]], [-1.53098, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-1.53098, [3, -0.333333, 0], [3, 0.253333, 0]], [-1.53098, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LHipRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.275716, [3, -0.173333, 0], [3, 0.253333, 0]], [0.275716, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.275717, [3, -0.293333, 0], [3, 0.253333, 0]], [0.275717, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.275717, [3, -0.333333, 0], [3, 0.253333, 0]], [0.275717, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LHipYawPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.618735, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.618735, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.618735, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.618735, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.618735, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.618735, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LKneePitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[1.3959, [3, -0.173333, 0], [3, 0.253333, 0]], [1.3959, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [1.3959, [3, -0.293333, 0], [3, 0.253333, 0]], [1.3959, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [1.3959, [3, -0.333333, 0], [3, 0.253333, 0]], [1.3959, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LShoulderPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.865497, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.866412, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.865497, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.866413, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.865497, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.866413, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LShoulderRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.314159, [3, -0.173333, 0], [3, 0.253333, 0]], [0.626081, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.314159, [3, -0.293333, 0], [3, 0.253333, 0]], [0.626081, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.314159, [3, -0.333333, 0], [3, 0.253333, 0]], [0.626081, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("LWristYaw")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.0408902, [3, -0.173333, 0], [3, 0.253333, 0]], [0.0408902, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.0408903, [3, -0.293333, 0], [3, 0.253333, 0]], [0.0408903, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.0408903, [3, -0.333333, 0], [3, 0.253333, 0]], [0.0408903, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RAnklePitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.816081, [3, -0.173333, 0], [3, 0.253333, 0]], [0.816081, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.816081, [3, -0.293333, 0], [3, 0.253333, 0]], [0.816081, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.816081, [3, -0.333333, 0], [3, 0.253333, 0]], [0.816081, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RAnkleRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.00889008, [3, -0.173333, 0], [3, 0.253333, 0]], [0.00889008, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.00889008, [3, -0.293333, 0], [3, 0.253333, 0]], [0.00889008, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.00889008, [3, -0.333333, 0], [3, 0.253333, 0]], [0.00889008, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RElbowRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.507312, [3, -0.173333, 0], [3, 0.253333, 0]], [0.491065, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.507311, [3, -0.293333, 0], [3, 0.253333, 0]], [0.491064, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.507311, [3, -0.333333, 0], [3, 0.253333, 0]], [0.491064, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RElbowYaw")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.513914, [3, -0.173333, 0], [3, 0.253333, 0]], [0.51415, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.513914, [3, -0.293333, 0], [3, 0.253333, 0]], [0.51415, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.513914, [3, -0.333333, 0], [3, 0.253333, 0]], [0.51415, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RHand")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[0.3, [3, -0.173333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [0.3, [3, -0.293333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [0.3, [3, -0.333333, 0], [3, 0.253333, 0]], [0.3, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RHipPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-1.53589, [3, -0.173333, 0], [3, 0.253333, 0]], [-1.53589, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-1.53589, [3, -0.293333, 0], [3, 0.253333, 0]], [-1.53589, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-1.53589, [3, -0.333333, 0], [3, 0.253333, 0]], [-1.53589, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RHipRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.266458, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.266458, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.266458, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.266458, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.266458, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.266458, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RHipYawPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.618735, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.618735, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.618735, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.618735, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.618735, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.618735, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RKneePitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[1.40519, [3, -0.173333, 0], [3, 0.253333, 0]], [1.40519, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [1.40519, [3, -0.293333, 0], [3, 0.253333, 0]], [1.40519, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [1.40519, [3, -0.333333, 0], [3, 0.253333, 0]], [1.40519, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RShoulderPitch")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.781772, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.755106, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.781771, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.755106, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.781771, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.755106, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RShoulderRoll")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.706858, [3, -0.173333, 0], [3, 0.253333, 0]], [0.278804, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.706858, [3, -0.293333, 0], [3, 0.253333, 0]], [0.278804, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.706858, [3, -0.333333, 0], [3, 0.253333, 0]], [0.278804, [3, -0.253333, 0], [3, 0, 0]]])

    names.append("RWristYaw")
    times.append([0.52, 1.28, 2.16, 2.92, 3.92, 4.68])
    keys.append([[-0.0230426, [3, -0.173333, 0], [3, 0.253333, 0]], [-0.0230426, [3, -0.253333, 0], [3, 0.293333, 0]],
                 [-0.0230427, [3, -0.293333, 0], [3, 0.253333, 0]], [-0.0230427, [3, -0.253333, 0], [3, 0.333333, 0]],
                 [-0.0230427, [3, -0.333333, 0], [3, 0.253333, 0]], [-0.0230427, [3, -0.253333, 0], [3, 0, 0]]])

    try:
        # uncomment the following line and modify the IP if you use this script outside Choregraphe.
        motion = ALProxy("ALMotion", robotIP, port)
        #  motion = ALProxy("ALMotion")
        motion.angleInterpolationBezier(names, times, keys)
    except BaseException, err:
        print err


if __name__ == "__main__":
    robotIP = "127.0.0.1"
    port = 9559

    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    start = time.time()
    main(robotIP, port)
    end = time.time()
    duration = end - start
    print ("%.2f seconds elapsed" % duration)



