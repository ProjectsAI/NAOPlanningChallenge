import sys
import time
from naoqi import ALProxy


def main(robotIP, port):
	names = list()
	times = list()
	keys = list()
	
	try:
		ttsProxy = ALProxy("ALTextToSpeech",robotIP,port)
	except Exception,e:
		print("Could not create a proxy to ALTextToSpeech")
	
	#ttsProxy.say("I can't hear you! LOUDER!")

	names.append("HeadPitch")
	times.append([3.5])
	keys.append([[-0.000487671, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([3.5])
	keys.append([[0, [3, -1.16667, 0], [3, 0, 0]]])

	names.append("LAnklePitch")
	times.append([0.5, 3.5])
	keys.append([[-0.342304, [3, -0.166667, 0], [3, 1, 0]], [-0.348738, [3, -1, 0], [3, 0, 0]]])

	names.append("LAnkleRoll")
	times.append([0.5, 3.5])
	keys.append([[-0.00227364, [3, -0.166667, 0], [3, 1, 0]], [-0.00852969, [3, -1, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[-0.627039, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.661569, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.627039, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.661569, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.627039, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.661569, [3, -0.166667, 0.0345296], [3, 0.166667, -0.0345296]], [-1.00341, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[-1.46124, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.457, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.46124, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.457, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.46124, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.457, [3, -0.166667, -0.00423949], [3, 0.166667, 0.00423949]], [-1.38764, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.257813, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("LHipPitch")
	times.append([0.5, 3.5])
	keys.append([[-0.387463, [3, -0.166667, 0], [3, 1, 0]], [-0.448337, [3, -1, 0], [3, 0, 0]]])

	names.append("LHipRoll")
	times.append([0.5, 3.5])
	keys.append([[0, [3, -0.166667, 0], [3, 1, 0]], [0.000286866, [3, -1, 0], [3, 0, 0]]])

	names.append("LHipYawPitch")
	times.append([0.5, 3.5])
	keys.append([[-0.00297322, [3, -0.166667, 0], [3, 1, 0]], [-0.000487671, [3, -1, 0], [3, 0, 0]]])

	names.append("LKneePitch")
	times.append([0.5, 3.5])
	keys.append([[0.6991, [3, -0.166667, 0], [3, 1, 0]], [0.697734, [3, -1, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[-0.249549, [3, -0.166667, 0], [3, 0.166667, 0]], [1.15204, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.249549, [3, -0.166667, 0], [3, 0.166667, 0]], [1.15204, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.249549, [3, -0.166667, 0], [3, 0.166667, 0]], [1.15204, [3, -0.166667, -0.250233], [3, 0.166667, 0.250233]], [1.40227, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[0.953552, [3, -0.166667, 0], [3, 0.166667, 0]], [0.501862, [3, -0.166667, 0], [3, 0.166667, 0]], [0.953552, [3, -0.166667, 0], [3, 0.166667, 0]], [0.501862, [3, -0.166667, 0], [3, 0.166667, 0]], [0.953552, [3, -0.166667, 0], [3, 0.166667, 0]], [0.501862, [3, -0.166667, 0.109041], [3, 0.166667, -0.109041]], [0.299303, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[-1.51768, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.5083, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.51768, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.5083, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.51768, [3, -0.166667, 0], [3, 0.166667, 0]], [-1.5083, [3, -0.166667, -0.00937952], [3, 0.166667, 0.00937952]], [0.00691477, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("RAnklePitch")
	times.append([0.5, 3.5])
	keys.append([[-0.342304, [3, -0.166667, 0], [3, 1, 0]], [-0.348738, [3, -1, 0], [3, 0, 0]]])

	names.append("RAnkleRoll")
	times.append([0.5, 3.5])
	keys.append([[0.00225884, [3, -0.166667, 0], [3, 1, 0]], [0.00852969, [3, -1, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[0.627039, [3, -0.166667, 0], [3, 0.166667, 0]], [0.661569, [3, -0.166667, 0], [3, 0.166667, 0]], [0.627039, [3, -0.166667, 0], [3, 0.166667, 0]], [0.661569, [3, -0.166667, 0], [3, 0.166667, 0]], [0.627039, [3, -0.166667, 0], [3, 0.166667, 0]], [0.661569, [3, -0.166667, -0.0345296], [3, 0.166667, 0.0345296]], [1.00341, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[1.46124, [3, -0.166667, 0], [3, 0.166667, 0]], [1.457, [3, -0.166667, 0], [3, 0.166667, 0]], [1.46124, [3, -0.166667, 0], [3, 0.166667, 0]], [1.457, [3, -0.166667, 0], [3, 0.166667, 0]], [1.46124, [3, -0.166667, 0], [3, 0.166667, 0]], [1.457, [3, -0.166667, 0.00423949], [3, 0.166667, -0.00423949]], [1.38764, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.84, [3, -0.166667, 0], [3, 0.166667, 0]], [0.257813, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("RHipPitch")
	times.append([0.5, 3.5])
	keys.append([[-0.45, [3, -0.166667, 0], [3, 1, 0]], [-0.448337, [3, -1, 0], [3, 0, 0]]])

	names.append("RHipRoll")
	times.append([0.5, 3.5])
	keys.append([[-0.0925025, [3, -0.166667, 0], [3, 1, 0]], [-0.000286866, [3, -1, 0], [3, 0, 0]]])

	names.append("RHipYawPitch")
	times.append([0.5, 3.5])
	keys.append([[-0.00297322, [3, -0.166667, 0], [3, 1, 0]], [-0.000487671, [3, -1, 0], [3, 0, 0]]])

	names.append("RKneePitch")
	times.append([0.5, 3.5])
	keys.append([[0.6991, [3, -0.166667, 0], [3, 1, 0]], [0.697734, [3, -1, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[-0.249549, [3, -0.166667, 0], [3, 0.166667, 0]], [1.15204, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.249549, [3, -0.166667, 0], [3, 0.166667, 0]], [1.15204, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.249549, [3, -0.166667, 0], [3, 0.166667, 0]], [1.15204, [3, -0.166667, -0.250233], [3, 0.166667, 0.250233]], [1.40227, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[-0.953552, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.501862, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.953552, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.501862, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.953552, [3, -0.166667, 0], [3, 0.166667, 0]], [-0.501862, [3, -0.166667, -0.109041], [3, 0.166667, 0.109041]], [-0.299303, [3, -0.166667, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.5, 1, 1.5, 2, 2.5, 3, 3.5])
	keys.append([[1.51768, [3, -0.166667, 0], [3, 0.166667, 0]], [1.5083, [3, -0.166667, 0], [3, 0.166667, 0]], [1.51768, [3, -0.166667, 0], [3, 0.166667, 0]], [1.5083, [3, -0.166667, 0], [3, 0.166667, 0]], [1.51768, [3, -0.166667, 0], [3, 0.166667, 0]], [1.5083, [3, -0.166667, 0.00937952], [3, 0.166667, -0.00937952]], [0.00691477, [3, -0.166667, 0], [3, 0, 0]]])

	try:
	  motion = ALProxy("ALMotion",robotIP,port)
	  motion.angleInterpolationBezier(names, times, keys)
	except BaseException, err:
	  print err
	  
  
if __name__ == "__main__":

    robotIP = "127.0.0.1"#"192.168.11.3"

    port = 55650 #9559 # Insert NAO port


    if len(sys.argv) <= 1:
        print "(robotIP default: 127.0.0.1)"
    elif len(sys.argv) <= 2:
        robotIP = sys.argv[1]
    else:
        port = int(sys.argv[2])
        robotIP = sys.argv[1]

    main(robotIP, port)
